Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    main_1.o(.text.main) refers to system_bluenrg_lp.o(.text.SystemInit) for SystemInit
    main_1.o(.text.main) refers to rtx_delay.o(.text.osDelay) for osDelay
    main_1.o(.ARM.exidx.text.main) refers to main_1.o(.text.main) for [Anonymous Symbol]
    rtx_lib.o(.text._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init) refers to rtx_lib.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for [Anonymous Symbol]
    rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace) refers to rtx_lib.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for [Anonymous Symbol]
    rtx_lib.o(.ARM.exidx.text.os_kernel_is_active) refers to rtx_lib.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(.text._mutex_initialize) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text._mutex_initialize) refers to rtx_lib.o(.text._mutex_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_acquire) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(.ARM.exidx.text._mutex_acquire) refers to rtx_lib.o(.text._mutex_acquire) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_release) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(.ARM.exidx.text._mutex_release) refers to rtx_lib.o(.text._mutex_release) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(.ARM.exidx.text._mutex_free) refers to rtx_lib.o(.text._mutex_free) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv6m.o(.rodata) for irqRtxLib
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.NMI_IRQHandler) refers to startup_bluenrg_lp.o(.text.NMI_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.HardFault_IRQHandler) refers to startup_bluenrg_lp.o(.text.HardFault_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.SVC_IRQHandler) refers to startup_bluenrg_lp.o(.text.SVC_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.PendSV_IRQHandler) refers to startup_bluenrg_lp.o(.text.PendSV_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.SysTick_IRQHandler) refers to startup_bluenrg_lp.o(.text.SysTick_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.FLASH_IRQHandler) refers to startup_bluenrg_lp.o(.text.FLASH_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.RCC_IRQHandler) refers to startup_bluenrg_lp.o(.text.RCC_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.PVD_IRQHandler) refers to startup_bluenrg_lp.o(.text.PVD_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.I2C1_IRQHandler) refers to startup_bluenrg_lp.o(.text.I2C1_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.I2C2_IRQHandler) refers to startup_bluenrg_lp.o(.text.I2C2_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.SPI1_IRQHandler) refers to startup_bluenrg_lp.o(.text.SPI1_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.SPI2_IRQHandler) refers to startup_bluenrg_lp.o(.text.SPI2_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.SPI3_IRQHandler) refers to startup_bluenrg_lp.o(.text.SPI3_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.USART1_IRQHandler) refers to startup_bluenrg_lp.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.LPUART1_IRQHandler) refers to startup_bluenrg_lp.o(.text.LPUART1_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.TIM1_IRQHandler) refers to startup_bluenrg_lp.o(.text.TIM1_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.RTC_IRQHandler) refers to startup_bluenrg_lp.o(.text.RTC_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.ADC_IRQHandler) refers to startup_bluenrg_lp.o(.text.ADC_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.PKA_IRQHandler) refers to startup_bluenrg_lp.o(.text.PKA_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.UPCONV_IRQHandler) refers to startup_bluenrg_lp.o(.text.UPCONV_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.GPIOA_IRQHandler) refers to startup_bluenrg_lp.o(.text.GPIOA_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.GPIOB_IRQHandler) refers to startup_bluenrg_lp.o(.text.GPIOB_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.DMA_IRQHandler) refers to startup_bluenrg_lp.o(.text.DMA_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.BLE_TX_RX_IRQHandler) refers to startup_bluenrg_lp.o(.text.BLE_TX_RX_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.BLE_AES_IRQHandler) refers to startup_bluenrg_lp.o(.text.BLE_AES_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.BLE_ERROR_IRQHandler) refers to startup_bluenrg_lp.o(.text.BLE_ERROR_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.RADIO_CTRL_IRQHandler) refers to startup_bluenrg_lp.o(.text.RADIO_CTRL_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.MR_BLE_IRQHandler) refers to startup_bluenrg_lp.o(.text.MR_BLE_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.CPU_WKUP_IRQHandler) refers to startup_bluenrg_lp.o(.text.CPU_WKUP_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.BLE_WKUP_IRQHandler) refers to startup_bluenrg_lp.o(.text.BLE_WKUP_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.BLE_RXTX_SEQ_IRQHandler) refers to startup_bluenrg_lp.o(.text.BLE_RXTX_SEQ_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.CS_contextRestore) refers to startup_bluenrg_lp.o(.text.CS_contextRestore) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.text.__low_level_init) refers to startup_bluenrg_lp.o(.text.CS_contextRestore) for CS_contextRestore
    startup_bluenrg_lp.o(.text.__low_level_init) refers to startup_bluenrg_lp.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    startup_bluenrg_lp.o(.text.__low_level_init) refers to system_bluenrg_lp.o(.bss.ram_vr) for RAM_VR
    startup_bluenrg_lp.o(.ARM.exidx.text.__low_level_init) refers to startup_bluenrg_lp.o(.text.__low_level_init) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.__NVIC_SystemReset) refers to startup_bluenrg_lp.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.text.RESET_HANDLER) refers to main_1.o(.text.main) for main
    startup_bluenrg_lp.o(.ARM.exidx.text.RESET_HANDLER) refers to startup_bluenrg_lp.o(.text.RESET_HANDLER) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.text.setInterruptPriority) refers to startup_bluenrg_lp.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    startup_bluenrg_lp.o(.ARM.exidx.text.setInterruptPriority) refers to startup_bluenrg_lp.o(.text.setInterruptPriority) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.__NVIC_SetPriority) refers to startup_bluenrg_lp.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.RESET_HANDLER) for RESET_HANDLER
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.NMI_IRQHandler) for NMI_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.HardFault_IRQHandler) for HardFault_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.SVC_IRQHandler) for SVC_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.PendSV_IRQHandler) for PendSV_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.SysTick_IRQHandler) for SysTick_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.FLASH_IRQHandler) for FLASH_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.RCC_IRQHandler) for RCC_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.PVD_IRQHandler) for PVD_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.I2C1_IRQHandler) for I2C1_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.I2C2_IRQHandler) for I2C2_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.SPI1_IRQHandler) for SPI1_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.SPI2_IRQHandler) for SPI2_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.SPI3_IRQHandler) for SPI3_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.LPUART1_IRQHandler) for LPUART1_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.TIM1_IRQHandler) for TIM1_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.RTC_IRQHandler) for RTC_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.ADC_IRQHandler) for ADC_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.PKA_IRQHandler) for PKA_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.UPCONV_IRQHandler) for UPCONV_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.GPIOA_IRQHandler) for GPIOA_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.GPIOB_IRQHandler) for GPIOB_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.DMA_IRQHandler) for DMA_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.BLE_TX_RX_IRQHandler) for BLE_TX_RX_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.BLE_AES_IRQHandler) for BLE_AES_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.BLE_ERROR_IRQHandler) for BLE_ERROR_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.RADIO_CTRL_IRQHandler) for RADIO_CTRL_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.MR_BLE_IRQHandler) for MR_BLE_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.CPU_WKUP_IRQHandler) for CPU_WKUP_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.BLE_WKUP_IRQHandler) for BLE_WKUP_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.BLE_RXTX_SEQ_IRQHandler) for BLE_RXTX_SEQ_IRQHandler
    system_bluenrg_lp.o(.text.SystemTimer_TimeoutConfig) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    system_bluenrg_lp.o(.ARM.exidx.text.SystemTimer_TimeoutConfig) refers to system_bluenrg_lp.o(.text.SystemTimer_TimeoutConfig) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.SystemTimer_TimeoutExpired) refers to system_bluenrg_lp.o(.text.SystemTimer_TimeoutExpired) for [Anonymous Symbol]
    system_bluenrg_lp.o(.text.SystemReadyWait) refers to system_bluenrg_lp.o(.text.SystemTimer_TimeoutConfig) for SystemTimer_TimeoutConfig
    system_bluenrg_lp.o(.text.SystemReadyWait) refers to system_bluenrg_lp.o(.text.SystemTimer_TimeoutExpired) for SystemTimer_TimeoutExpired
    system_bluenrg_lp.o(.text.SystemReadyWait) refers to system_bluenrg_lp.o(.data.SystemCoreClock) for SystemCoreClock
    system_bluenrg_lp.o(.ARM.exidx.text.SystemReadyWait) refers to system_bluenrg_lp.o(.text.SystemReadyWait) for [Anonymous Symbol]
    system_bluenrg_lp.o(.text.MrBleBiasTrimConfig) refers to system_bluenrg_lp.o(.text.LL_RCC_SetRC64MPLLPrescaler) for LL_RCC_SetRC64MPLLPrescaler
    system_bluenrg_lp.o(.text.MrBleBiasTrimConfig) refers to system_bluenrg_lp.o(.text.LL_RCC_SetRFClockSource) for LL_RCC_SetRFClockSource
    system_bluenrg_lp.o(.text.MrBleBiasTrimConfig) refers to system_bluenrg_lp.o(.text.LL_APB2_ForceReset) for LL_APB2_ForceReset
    system_bluenrg_lp.o(.text.MrBleBiasTrimConfig) refers to system_bluenrg_lp.o(.text.LL_APB2_ReleaseReset) for LL_APB2_ReleaseReset
    system_bluenrg_lp.o(.text.MrBleBiasTrimConfig) refers to system_bluenrg_lp.o(.text.LL_APB2_EnableClock) for LL_APB2_EnableClock
    system_bluenrg_lp.o(.ARM.exidx.text.MrBleBiasTrimConfig) refers to system_bluenrg_lp.o(.text.MrBleBiasTrimConfig) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_SetRC64MPLLPrescaler) refers to system_bluenrg_lp.o(.text.LL_RCC_SetRC64MPLLPrescaler) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_SetRFClockSource) refers to system_bluenrg_lp.o(.text.LL_RCC_SetRFClockSource) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_APB2_ForceReset) refers to system_bluenrg_lp.o(.text.LL_APB2_ForceReset) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_APB2_ReleaseReset) refers to system_bluenrg_lp.o(.text.LL_APB2_ReleaseReset) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_APB2_EnableClock) refers to system_bluenrg_lp.o(.text.LL_APB2_EnableClock) for [Anonymous Symbol]
    system_bluenrg_lp.o(.text.SystemCoreClockUpdate) refers to system_bluenrg_lp.o(.text.LL_RCC_GetRC64MPLLPrescaler) for LL_RCC_GetRC64MPLLPrescaler
    system_bluenrg_lp.o(.text.SystemCoreClockUpdate) refers to system_bluenrg_lp.o(.data.SystemCoreClock) for SystemCoreClock
    system_bluenrg_lp.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_bluenrg_lp.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_GetRC64MPLLPrescaler) refers to system_bluenrg_lp.o(.text.LL_RCC_GetRC64MPLLPrescaler) for [Anonymous Symbol]
    system_bluenrg_lp.o(.text.SystemClockConfig) refers to system_bluenrg_lp.o(.text.LL_RCC_HSE_Enable) for LL_RCC_HSE_Enable
    system_bluenrg_lp.o(.text.SystemClockConfig) refers to system_bluenrg_lp.o(.text.SystemReadyWait) for SystemReadyWait
    system_bluenrg_lp.o(.text.SystemClockConfig) refers to system_bluenrg_lp.o(.text.LL_SYSCFG_GetDeviceVersion) for LL_SYSCFG_GetDeviceVersion
    system_bluenrg_lp.o(.text.SystemClockConfig) refers to system_bluenrg_lp.o(.text.LL_SYSCFG_GetDeviceRevision) for LL_SYSCFG_GetDeviceRevision
    system_bluenrg_lp.o(.text.SystemClockConfig) refers to system_bluenrg_lp.o(.text.LL_FLASH_SetWaitStates) for LL_FLASH_SetWaitStates
    system_bluenrg_lp.o(.text.SystemClockConfig) refers to system_bluenrg_lp.o(.text.LL_RCC_SetRC64MPLLPrescaler) for LL_RCC_SetRC64MPLLPrescaler
    system_bluenrg_lp.o(.text.SystemClockConfig) refers to system_bluenrg_lp.o(.text.LL_RCC_RC64MPLL_Enable) for LL_RCC_RC64MPLL_Enable
    system_bluenrg_lp.o(.text.SystemClockConfig) refers to system_bluenrg_lp.o(.text.LL_RCC_DIRECT_HSE_Enable) for LL_RCC_DIRECT_HSE_Enable
    system_bluenrg_lp.o(.text.SystemClockConfig) refers to system_bluenrg_lp.o(.text.LL_RCC_HSE_IsReady) for LL_RCC_HSE_IsReady
    system_bluenrg_lp.o(.text.SystemClockConfig) refers to system_bluenrg_lp.o(.data.SystemCoreClock) for SystemCoreClock
    system_bluenrg_lp.o(.text.SystemClockConfig) refers to system_bluenrg_lp.o(.text.LL_RCC_RC64MPLL_IsReady) for LL_RCC_RC64MPLL_IsReady
    system_bluenrg_lp.o(.ARM.exidx.text.SystemClockConfig) refers to system_bluenrg_lp.o(.text.SystemClockConfig) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_HSE_Enable) refers to system_bluenrg_lp.o(.text.LL_RCC_HSE_Enable) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_HSE_IsReady) refers to system_bluenrg_lp.o(.text.LL_RCC_HSE_IsReady) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_SYSCFG_GetDeviceVersion) refers to system_bluenrg_lp.o(.text.LL_SYSCFG_GetDeviceVersion) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_SYSCFG_GetDeviceRevision) refers to system_bluenrg_lp.o(.text.LL_SYSCFG_GetDeviceRevision) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_FLASH_SetWaitStates) refers to system_bluenrg_lp.o(.text.LL_FLASH_SetWaitStates) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_RC64MPLL_Enable) refers to system_bluenrg_lp.o(.text.LL_RCC_RC64MPLL_Enable) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_RC64MPLL_IsReady) refers to system_bluenrg_lp.o(.text.LL_RCC_RC64MPLL_IsReady) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_DIRECT_HSE_Enable) refers to system_bluenrg_lp.o(.text.LL_RCC_DIRECT_HSE_Enable) for [Anonymous Symbol]
    system_bluenrg_lp.o(.text.RadioClockConfig) refers to system_bluenrg_lp.o(.text.LL_RCC_SetRFClockSource) for LL_RCC_SetRFClockSource
    system_bluenrg_lp.o(.text.RadioClockConfig) refers to system_bluenrg_lp.o(.text.LL_SYSCFG_GetDeviceVersion) for LL_SYSCFG_GetDeviceVersion
    system_bluenrg_lp.o(.text.RadioClockConfig) refers to system_bluenrg_lp.o(.text.LL_SYSCFG_GetDeviceRevision) for LL_SYSCFG_GetDeviceRevision
    system_bluenrg_lp.o(.ARM.exidx.text.RadioClockConfig) refers to system_bluenrg_lp.o(.text.RadioClockConfig) for [Anonymous Symbol]
    system_bluenrg_lp.o(.text.SystemInit) refers to system_bluenrg_lp.o(.text.LL_PWR_EnableRAMBankRet) for LL_PWR_EnableRAMBankRet
    system_bluenrg_lp.o(.text.SystemInit) refers to system_bluenrg_lp.o(.text.SmpsTrimConfig) for SmpsTrimConfig
    system_bluenrg_lp.o(.text.SystemInit) refers to system_bluenrg_lp.o(.text.LSConfig) for LSConfig
    system_bluenrg_lp.o(.text.SystemInit) refers to system_bluenrg_lp.o(.text.MrBleBiasTrimConfig) for MrBleBiasTrimConfig
    system_bluenrg_lp.o(.text.SystemInit) refers to system_bluenrg_lp.o(.text.LL_RCC_HSE_SetCapacitorTuning) for LL_RCC_HSE_SetCapacitorTuning
    system_bluenrg_lp.o(.text.SystemInit) refers to system_bluenrg_lp.o(.text.LL_RCC_HSE_SetCurrentControl) for LL_RCC_HSE_SetCurrentControl
    system_bluenrg_lp.o(.text.SystemInit) refers to system_bluenrg_lp.o(.text.SystemClockConfig) for SystemClockConfig
    system_bluenrg_lp.o(.text.SystemInit) refers to system_bluenrg_lp.o(.text.RadioClockConfig) for RadioClockConfig
    system_bluenrg_lp.o(.text.SystemInit) refers to startup_bluenrg_lp.o(.text.setInterruptPriority) for setInterruptPriority
    system_bluenrg_lp.o(.text.SystemInit) refers to startup_bluenrg_lp.o(.intvec) for __vector_table
    system_bluenrg_lp.o(.text.SystemInit) refers to system_bluenrg_lp.o(.bss.ram_vr) for RAM_VR
    system_bluenrg_lp.o(.ARM.exidx.text.SystemInit) refers to system_bluenrg_lp.o(.text.SystemInit) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_PWR_EnableRAMBankRet) refers to system_bluenrg_lp.o(.text.LL_PWR_EnableRAMBankRet) for [Anonymous Symbol]
    system_bluenrg_lp.o(.text.SmpsTrimConfig) refers to system_bluenrg_lp.o(.text.SystemReadyWait) for SystemReadyWait
    system_bluenrg_lp.o(.text.SmpsTrimConfig) refers to system_bluenrg_lp.o(.text.LL_PWR_SetSMPSBOM) for LL_PWR_SetSMPSBOM
    system_bluenrg_lp.o(.text.SmpsTrimConfig) refers to system_bluenrg_lp.o(.text.LL_RCC_SetSMPSPrescaler) for LL_RCC_SetSMPSPrescaler
    system_bluenrg_lp.o(.text.SmpsTrimConfig) refers to system_bluenrg_lp.o(.text.LL_RCC_HSI_SetCalibTrimming) for LL_RCC_HSI_SetCalibTrimming
    system_bluenrg_lp.o(.text.SmpsTrimConfig) refers to system_bluenrg_lp.o(.text.LL_RCC_LSI_SetTrimming) for LL_RCC_LSI_SetTrimming
    system_bluenrg_lp.o(.text.SmpsTrimConfig) refers to system_bluenrg_lp.o(.text.LL_PWR_SetLSILPMUTrim) for LL_PWR_SetLSILPMUTrim
    system_bluenrg_lp.o(.text.SmpsTrimConfig) refers to system_bluenrg_lp.o(.text.LL_PWR_SetMRTrim) for LL_PWR_SetMRTrim
    system_bluenrg_lp.o(.text.SmpsTrimConfig) refers to system_bluenrg_lp.o(.text.LL_PWR_SetSMPSTrim) for LL_PWR_SetSMPSTrim
    system_bluenrg_lp.o(.text.SmpsTrimConfig) refers to system_bluenrg_lp.o(.text.LL_PWR_SetSMPSOpenMode) for LL_PWR_SetSMPSOpenMode
    system_bluenrg_lp.o(.text.SmpsTrimConfig) refers to system_bluenrg_lp.o(.text.LL_PWR_IsSMPSReady) for LL_PWR_IsSMPSReady
    system_bluenrg_lp.o(.ARM.exidx.text.SmpsTrimConfig) refers to system_bluenrg_lp.o(.text.SmpsTrimConfig) for [Anonymous Symbol]
    system_bluenrg_lp.o(.text.LSConfig) refers to system_bluenrg_lp.o(.text.LL_RCC_LSI_Disable) for LL_RCC_LSI_Disable
    system_bluenrg_lp.o(.text.LSConfig) refers to system_bluenrg_lp.o(.text.SystemReadyWait) for SystemReadyWait
    system_bluenrg_lp.o(.text.LSConfig) refers to system_bluenrg_lp.o(.text.LL_RCC_LSE_Disable) for LL_RCC_LSE_Disable
    system_bluenrg_lp.o(.text.LSConfig) refers to system_bluenrg_lp.o(.text.LL_RCC_LSCO_SetSource) for LL_RCC_LSCO_SetSource
    system_bluenrg_lp.o(.text.LSConfig) refers to system_bluenrg_lp.o(.text.LL_RCC_LSI_Enable) for LL_RCC_LSI_Enable
    system_bluenrg_lp.o(.text.LSConfig) refers to system_bluenrg_lp.o(.text.LL_RCC_LSI_IsReady) for LL_RCC_LSI_IsReady
    system_bluenrg_lp.o(.ARM.exidx.text.LSConfig) refers to system_bluenrg_lp.o(.text.LSConfig) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_HSE_SetCapacitorTuning) refers to system_bluenrg_lp.o(.text.LL_RCC_HSE_SetCapacitorTuning) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_HSE_SetCurrentControl) refers to system_bluenrg_lp.o(.text.LL_RCC_HSE_SetCurrentControl) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_PWR_IsSMPSReady) refers to system_bluenrg_lp.o(.text.LL_PWR_IsSMPSReady) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_PWR_SetSMPSBOM) refers to system_bluenrg_lp.o(.text.LL_PWR_SetSMPSBOM) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_SetSMPSPrescaler) refers to system_bluenrg_lp.o(.text.LL_RCC_SetSMPSPrescaler) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_HSI_SetCalibTrimming) refers to system_bluenrg_lp.o(.text.LL_RCC_HSI_SetCalibTrimming) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_LSI_SetTrimming) refers to system_bluenrg_lp.o(.text.LL_RCC_LSI_SetTrimming) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_PWR_SetLSILPMUTrim) refers to system_bluenrg_lp.o(.text.LL_PWR_SetLSILPMUTrim) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_PWR_SetMRTrim) refers to system_bluenrg_lp.o(.text.LL_PWR_SetMRTrim) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_PWR_SetSMPSTrim) refers to system_bluenrg_lp.o(.text.LL_PWR_SetSMPSTrim) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_PWR_SetSMPSOpenMode) refers to system_bluenrg_lp.o(.text.LL_PWR_SetSMPSOpenMode) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_LSI_Disable) refers to system_bluenrg_lp.o(.text.LL_RCC_LSI_Disable) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_LSI_IsReady) refers to system_bluenrg_lp.o(.text.LL_RCC_LSI_IsReady) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_LSE_Disable) refers to system_bluenrg_lp.o(.text.LL_RCC_LSE_Disable) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_LSCO_SetSource) refers to system_bluenrg_lp.o(.text.LL_RCC_LSCO_SetSource) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_LSI_Enable) refers to system_bluenrg_lp.o(.text.LL_RCC_LSI_Enable) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv6m.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.GetKernelSleepTime) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime) refers to rtx_kernel.o(.text.GetKernelSleepTime) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    irq_armv6m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv6m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv6m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv6m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv6m.o(.ARM.exidx) refers to irq_armv6m.o(.text) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    os_systick.o(.text.OS_Tick_Setup) refers to system_bluenrg_lp.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_bluenrg_lp.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry7.o(.ARM.Collect$$rtentry$$00000007) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main_1.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    __rtentry7.o(.ARM.Collect$$rtentry$$00000007) refers to __rtentry7.o(.ARM.Collect$$rtentry$$00002718) for __lit__00000000
    __rtentry7.o(__vectab_stack_and_reset_2_area) refers to __main.o(!!!main) for __main
    __rtentry7.o(.ARM.exidx) refers to __rtentry7.o(.ARM.Collect$$rtentry$$00000007) for .ARM.Collect$$rtentry$$00000007
    __rtentry7.o(.ARM.exidx) refers to __rtentry7.o(.ARM.Collect$$rtentry$$00002718) for .ARM.Collect$$rtentry$$00002718
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to sys_stackheap.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    sys_stackheap.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_stackheap.o(.text) refers to use_no_semi.o(.text) for __I$use$semihosting
    sys_stackheap_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_stackheap_hlt.o(.text) refers to use_no_semi.o(.text) for __I$use$semihosting
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main_1.o(.text), (0 bytes).
    Removing main_1.o(.ARM.exidx.text.main), (8 bytes).
    Removing main_1.o(.ARM.use_no_argv), (4 bytes).
    Removing rf_driver_ll_rcc.o(.text), (0 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing rtx_lib.o(.text.__user_perthread_libspace), (136 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing rtx_lib.o(.rodata.osRtxUserSVC), (4 bytes).
    Removing rtx_lib.o(.bss.os.libspace), (496 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing startup_bluenrg_lp.o(.text), (0 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.NMI_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.HardFault_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.SVC_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.PendSV_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.SysTick_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.FLASH_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.RCC_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.PVD_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.I2C1_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.I2C2_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.SPI1_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.SPI2_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.SPI3_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.LPUART1_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.TIM1_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.RTC_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.ADC_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.PKA_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.UPCONV_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.GPIOA_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.GPIOB_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.DMA_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.BLE_TX_RX_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.BLE_AES_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.BLE_ERROR_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.RADIO_CTRL_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.MR_BLE_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.CPU_WKUP_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.BLE_WKUP_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.BLE_RXTX_SEQ_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.text.CS_contextRestore), (2 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.CS_contextRestore), (8 bytes).
    Removing startup_bluenrg_lp.o(.text.__low_level_init), (68 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.__low_level_init), (8 bytes).
    Removing startup_bluenrg_lp.o(.text.__NVIC_SystemReset), (28 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.RESET_HANDLER), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.setInterruptPriority), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing system_bluenrg_lp.o(.text), (0 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.SystemTimer_TimeoutConfig), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.SystemTimer_TimeoutExpired), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.SystemReadyWait), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.MrBleBiasTrimConfig), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_SetRC64MPLLPrescaler), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_SetRFClockSource), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_APB2_ForceReset), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_APB2_ReleaseReset), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_APB2_EnableClock), (8 bytes).
    Removing system_bluenrg_lp.o(.text.SystemCoreClockUpdate), (160 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_bluenrg_lp.o(.text.LL_RCC_GetRC64MPLLPrescaler), (16 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_GetRC64MPLLPrescaler), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.SystemClockConfig), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_HSE_Enable), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_HSE_IsReady), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_SYSCFG_GetDeviceVersion), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_SYSCFG_GetDeviceRevision), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_FLASH_SetWaitStates), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_RC64MPLL_Enable), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_RC64MPLL_IsReady), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_DIRECT_HSE_Enable), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.RadioClockConfig), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_PWR_EnableRAMBankRet), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.SmpsTrimConfig), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LSConfig), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_HSE_SetCapacitorTuning), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_HSE_SetCurrentControl), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_PWR_IsSMPSReady), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_PWR_SetSMPSBOM), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_SetSMPSPrescaler), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_HSI_SetCalibTrimming), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_LSI_SetTrimming), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_PWR_SetLSILPMUTrim), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_PWR_SetMRTrim), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_PWR_SetSMPSTrim), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_PWR_SetSMPSOpenMode), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_LSI_Disable), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_LSI_IsReady), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_LSE_Disable), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_LSCO_SetSource), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_LSI_Enable), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (56 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelStart), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelStart), (132 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (60 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.GetKernelSleepTime), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (128 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDelayTick), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadSwitch), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadStartup), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadNew), (508 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadNew), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.text.osThreadExit), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadPostProcess), (38 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.text.ThreadFlagsCheck), (74 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (18 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (18 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (70 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (132 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (54 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (58 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadFree), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadExit), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadJoinWakeup), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDestroy), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (152 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (96 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (104 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (40 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (32 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (132 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (18 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (42 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.text.osRtxMutexOwnerRelease), (68 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osRtxMutexOwnerRestore), (70 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (18 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (24 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing irq_armv6m.o(.text), (164 bytes).
    Removing irq_armv6m.o(.rodata), (1 bytes).
    Removing irq_armv6m.o(.ARM.exidx), (24 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (432 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (64 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (112 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (160 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (112 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.text.osRtxTick_Handler), (128 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.text.osRtxPendSV_Handler), (132 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.text.OS_Tick_Setup), (76 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Enable), (44 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (40 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_AcknowledgeIRQ), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetIRQn), (6 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing os_systick.o(.bss.os), (1 bytes).

448 unused section(s) (total 10808 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry7.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_hlt.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main_1.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rf_driver_ll_rcc.c                       0x00000000   Number         0  rf_driver_ll_rcc.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    startup_BlueNRG_LP.c                     0x00000000   Number         0  startup_bluenrg_lp.o ABSOLUTE
    system_BlueNRG_LP.c                      0x00000000   Number         0  system_bluenrg_lp.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv6m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv6m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv6m.o ABSOLUTE
    __tagsym$$used.0                         0x10040000   Number         0  startup_bluenrg_lp.o(.intvec)
    !!!main                                  0x100400c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x100400c8   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x10040104   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x10040120   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x1004013c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x1004013e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x10040140   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x10040142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x10040142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x10040142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x10040142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x10040142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x10040142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x10040142   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x10040144   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x10040144   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000007          0x10040144   Section        4  __rtentry7.o(.ARM.Collect$$rtentry$$00000007)
    .ARM.Collect$$rtentry$$00000008          0x10040148   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x10040150   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x10040154   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x10040154   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __lit__00000000                          0x1004015c   Data           4  __rtentry7.o(.ARM.Collect$$rtentry$$00002718)
    .ARM.Collect$$rtentry$$00002718          0x1004015c   Section        4  __rtentry7.o(.ARM.Collect$$rtentry$$00002718)
    .ARM.Collect$$rtexit$$00000000           0x10040160   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x10040162   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x10040162   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x10040166   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x1004016c   Section       56  rt_memcpy.o(.emb_text)
    .text                                    0x100401a4   Section        0  rt_memcpy.o(.text)
    .text                                    0x10040226   Section        0  rt_memclr.o(.text)
    .text                                    0x10040268   Section      364  aeabi_sdiv.o(.text)
    .text                                    0x100403d4   Section        0  exit.o(.text)
    .text                                    0x100403e4   Section        0  sys_exit.o(.text)
    .text                                    0x100403f0   Section        2  use_no_semi.o(.text)
    [Anonymous Symbol]                       0x100403f2   Section        0  startup_bluenrg_lp.o(.text.ADC_IRQHandler)
    .text                                    0x100403f2   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x100403f4   Section        0  startup_bluenrg_lp.o(.text.BLE_AES_IRQHandler)
    [Anonymous Symbol]                       0x100403f6   Section        0  startup_bluenrg_lp.o(.text.BLE_ERROR_IRQHandler)
    [Anonymous Symbol]                       0x100403f8   Section        0  startup_bluenrg_lp.o(.text.BLE_RXTX_SEQ_IRQHandler)
    [Anonymous Symbol]                       0x100403fa   Section        0  startup_bluenrg_lp.o(.text.BLE_TX_RX_IRQHandler)
    [Anonymous Symbol]                       0x100403fc   Section        0  startup_bluenrg_lp.o(.text.BLE_WKUP_IRQHandler)
    [Anonymous Symbol]                       0x100403fe   Section        0  startup_bluenrg_lp.o(.text.CPU_WKUP_IRQHandler)
    [Anonymous Symbol]                       0x10040400   Section        0  startup_bluenrg_lp.o(.text.DMA_IRQHandler)
    [Anonymous Symbol]                       0x10040402   Section        0  startup_bluenrg_lp.o(.text.FLASH_IRQHandler)
    [Anonymous Symbol]                       0x10040404   Section        0  startup_bluenrg_lp.o(.text.GPIOA_IRQHandler)
    [Anonymous Symbol]                       0x10040406   Section        0  startup_bluenrg_lp.o(.text.GPIOB_IRQHandler)
    [Anonymous Symbol]                       0x10040408   Section        0  startup_bluenrg_lp.o(.text.HardFault_IRQHandler)
    [Anonymous Symbol]                       0x1004040a   Section        0  startup_bluenrg_lp.o(.text.I2C1_IRQHandler)
    [Anonymous Symbol]                       0x1004040c   Section        0  startup_bluenrg_lp.o(.text.I2C2_IRQHandler)
    LL_APB2_EnableClock                      0x10040411   Thumb Code    28  system_bluenrg_lp.o(.text.LL_APB2_EnableClock)
    [Anonymous Symbol]                       0x10040410   Section        0  system_bluenrg_lp.o(.text.LL_APB2_EnableClock)
    LL_APB2_ForceReset                       0x1004042d   Thumb Code    20  system_bluenrg_lp.o(.text.LL_APB2_ForceReset)
    [Anonymous Symbol]                       0x1004042c   Section        0  system_bluenrg_lp.o(.text.LL_APB2_ForceReset)
    LL_APB2_ReleaseReset                     0x10040441   Thumb Code    20  system_bluenrg_lp.o(.text.LL_APB2_ReleaseReset)
    [Anonymous Symbol]                       0x10040440   Section        0  system_bluenrg_lp.o(.text.LL_APB2_ReleaseReset)
    __arm_cp.7_0                             0x10040454   Number         4  system_bluenrg_lp.o(.text.LL_APB2_ReleaseReset)
    LL_FLASH_SetWaitStates                   0x10040459   Thumb Code    26  system_bluenrg_lp.o(.text.LL_FLASH_SetWaitStates)
    [Anonymous Symbol]                       0x10040458   Section        0  system_bluenrg_lp.o(.text.LL_FLASH_SetWaitStates)
    LL_PWR_EnableRAMBankRet                  0x10040475   Thumb Code    20  system_bluenrg_lp.o(.text.LL_PWR_EnableRAMBankRet)
    [Anonymous Symbol]                       0x10040474   Section        0  system_bluenrg_lp.o(.text.LL_PWR_EnableRAMBankRet)
    __arm_cp.22_0                            0x10040488   Number         4  system_bluenrg_lp.o(.text.LL_PWR_EnableRAMBankRet)
    LL_PWR_IsSMPSReady                       0x1004048d   Thumb Code    12  system_bluenrg_lp.o(.text.LL_PWR_IsSMPSReady)
    [Anonymous Symbol]                       0x1004048c   Section        0  system_bluenrg_lp.o(.text.LL_PWR_IsSMPSReady)
    __arm_cp.27_0                            0x10040498   Number         4  system_bluenrg_lp.o(.text.LL_PWR_IsSMPSReady)
    LL_PWR_SetLSILPMUTrim                    0x1004049d   Thumb Code    36  system_bluenrg_lp.o(.text.LL_PWR_SetLSILPMUTrim)
    [Anonymous Symbol]                       0x1004049c   Section        0  system_bluenrg_lp.o(.text.LL_PWR_SetLSILPMUTrim)
    LL_PWR_SetMRTrim                         0x100404c1   Thumb Code    36  system_bluenrg_lp.o(.text.LL_PWR_SetMRTrim)
    [Anonymous Symbol]                       0x100404c0   Section        0  system_bluenrg_lp.o(.text.LL_PWR_SetMRTrim)
    LL_PWR_SetSMPSBOM                        0x100404e5   Thumb Code    24  system_bluenrg_lp.o(.text.LL_PWR_SetSMPSBOM)
    [Anonymous Symbol]                       0x100404e4   Section        0  system_bluenrg_lp.o(.text.LL_PWR_SetSMPSBOM)
    LL_PWR_SetSMPSOpenMode                   0x100404fd   Thumb Code    24  system_bluenrg_lp.o(.text.LL_PWR_SetSMPSOpenMode)
    [Anonymous Symbol]                       0x100404fc   Section        0  system_bluenrg_lp.o(.text.LL_PWR_SetSMPSOpenMode)
    __arm_cp.35_0                            0x10040514   Number         4  system_bluenrg_lp.o(.text.LL_PWR_SetSMPSOpenMode)
    LL_PWR_SetSMPSTrim                       0x10040519   Thumb Code    40  system_bluenrg_lp.o(.text.LL_PWR_SetSMPSTrim)
    [Anonymous Symbol]                       0x10040518   Section        0  system_bluenrg_lp.o(.text.LL_PWR_SetSMPSTrim)
    __arm_cp.34_0                            0x10040540   Number         4  system_bluenrg_lp.o(.text.LL_PWR_SetSMPSTrim)
    LL_RCC_DIRECT_HSE_Enable                 0x10040545   Thumb Code    68  system_bluenrg_lp.o(.text.LL_RCC_DIRECT_HSE_Enable)
    [Anonymous Symbol]                       0x10040544   Section        0  system_bluenrg_lp.o(.text.LL_RCC_DIRECT_HSE_Enable)
    LL_RCC_HSE_Enable                        0x10040589   Thumb Code    16  system_bluenrg_lp.o(.text.LL_RCC_HSE_Enable)
    [Anonymous Symbol]                       0x10040588   Section        0  system_bluenrg_lp.o(.text.LL_RCC_HSE_Enable)
    LL_RCC_HSE_IsReady                       0x10040599   Thumb Code    16  system_bluenrg_lp.o(.text.LL_RCC_HSE_IsReady)
    [Anonymous Symbol]                       0x10040598   Section        0  system_bluenrg_lp.o(.text.LL_RCC_HSE_IsReady)
    LL_RCC_HSE_SetCapacitorTuning            0x100405a9   Thumb Code    36  system_bluenrg_lp.o(.text.LL_RCC_HSE_SetCapacitorTuning)
    [Anonymous Symbol]                       0x100405a8   Section        0  system_bluenrg_lp.o(.text.LL_RCC_HSE_SetCapacitorTuning)
    LL_RCC_HSE_SetCurrentControl             0x100405cd   Thumb Code    24  system_bluenrg_lp.o(.text.LL_RCC_HSE_SetCurrentControl)
    [Anonymous Symbol]                       0x100405cc   Section        0  system_bluenrg_lp.o(.text.LL_RCC_HSE_SetCurrentControl)
    __arm_cp.26_0                            0x100405e4   Number         4  system_bluenrg_lp.o(.text.LL_RCC_HSE_SetCurrentControl)
    LL_RCC_HSI_SetCalibTrimming              0x100405e9   Thumb Code    36  system_bluenrg_lp.o(.text.LL_RCC_HSI_SetCalibTrimming)
    [Anonymous Symbol]                       0x100405e8   Section        0  system_bluenrg_lp.o(.text.LL_RCC_HSI_SetCalibTrimming)
    LL_RCC_LSCO_SetSource                    0x1004060d   Thumb Code    24  system_bluenrg_lp.o(.text.LL_RCC_LSCO_SetSource)
    [Anonymous Symbol]                       0x1004060c   Section        0  system_bluenrg_lp.o(.text.LL_RCC_LSCO_SetSource)
    LL_RCC_LSE_Disable                       0x10040625   Thumb Code    12  system_bluenrg_lp.o(.text.LL_RCC_LSE_Disable)
    [Anonymous Symbol]                       0x10040624   Section        0  system_bluenrg_lp.o(.text.LL_RCC_LSE_Disable)
    LL_RCC_LSI_Disable                       0x10040631   Thumb Code    12  system_bluenrg_lp.o(.text.LL_RCC_LSI_Disable)
    [Anonymous Symbol]                       0x10040630   Section        0  system_bluenrg_lp.o(.text.LL_RCC_LSI_Disable)
    LL_RCC_LSI_Enable                        0x1004063d   Thumb Code    12  system_bluenrg_lp.o(.text.LL_RCC_LSI_Enable)
    [Anonymous Symbol]                       0x1004063c   Section        0  system_bluenrg_lp.o(.text.LL_RCC_LSI_Enable)
    LL_RCC_LSI_IsReady                       0x10040649   Thumb Code    12  system_bluenrg_lp.o(.text.LL_RCC_LSI_IsReady)
    [Anonymous Symbol]                       0x10040648   Section        0  system_bluenrg_lp.o(.text.LL_RCC_LSI_IsReady)
    LL_RCC_LSI_SetTrimming                   0x10040655   Thumb Code    32  system_bluenrg_lp.o(.text.LL_RCC_LSI_SetTrimming)
    [Anonymous Symbol]                       0x10040654   Section        0  system_bluenrg_lp.o(.text.LL_RCC_LSI_SetTrimming)
    __arm_cp.31_0                            0x10040674   Number         4  system_bluenrg_lp.o(.text.LL_RCC_LSI_SetTrimming)
    LL_RCC_RC64MPLL_Enable                   0x10040679   Thumb Code    16  system_bluenrg_lp.o(.text.LL_RCC_RC64MPLL_Enable)
    [Anonymous Symbol]                       0x10040678   Section        0  system_bluenrg_lp.o(.text.LL_RCC_RC64MPLL_Enable)
    LL_RCC_RC64MPLL_IsReady                  0x10040689   Thumb Code    16  system_bluenrg_lp.o(.text.LL_RCC_RC64MPLL_IsReady)
    [Anonymous Symbol]                       0x10040688   Section        0  system_bluenrg_lp.o(.text.LL_RCC_RC64MPLL_IsReady)
    __arm_cp.18_0                            0x10040698   Number         4  system_bluenrg_lp.o(.text.LL_RCC_RC64MPLL_IsReady)
    LL_RCC_SetRC64MPLLPrescaler              0x1004069d   Thumb Code    24  system_bluenrg_lp.o(.text.LL_RCC_SetRC64MPLLPrescaler)
    [Anonymous Symbol]                       0x1004069c   Section        0  system_bluenrg_lp.o(.text.LL_RCC_SetRC64MPLLPrescaler)
    LL_RCC_SetRFClockSource                  0x100406b5   Thumb Code    24  system_bluenrg_lp.o(.text.LL_RCC_SetRFClockSource)
    [Anonymous Symbol]                       0x100406b4   Section        0  system_bluenrg_lp.o(.text.LL_RCC_SetRFClockSource)
    __arm_cp.5_0                             0x100406cc   Number         4  system_bluenrg_lp.o(.text.LL_RCC_SetRFClockSource)
    LL_RCC_SetSMPSPrescaler                  0x100406d1   Thumb Code    24  system_bluenrg_lp.o(.text.LL_RCC_SetSMPSPrescaler)
    [Anonymous Symbol]                       0x100406d0   Section        0  system_bluenrg_lp.o(.text.LL_RCC_SetSMPSPrescaler)
    __arm_cp.29_0                            0x100406e8   Number         4  system_bluenrg_lp.o(.text.LL_RCC_SetSMPSPrescaler)
    LL_SYSCFG_GetDeviceRevision              0x100406ed   Thumb Code    12  system_bluenrg_lp.o(.text.LL_SYSCFG_GetDeviceRevision)
    [Anonymous Symbol]                       0x100406ec   Section        0  system_bluenrg_lp.o(.text.LL_SYSCFG_GetDeviceRevision)
    LL_SYSCFG_GetDeviceVersion               0x100406f9   Thumb Code    12  system_bluenrg_lp.o(.text.LL_SYSCFG_GetDeviceVersion)
    [Anonymous Symbol]                       0x100406f8   Section        0  system_bluenrg_lp.o(.text.LL_SYSCFG_GetDeviceVersion)
    [Anonymous Symbol]                       0x10040704   Section        0  startup_bluenrg_lp.o(.text.LPUART1_IRQHandler)
    LSConfig                                 0x10040709   Thumb Code    96  system_bluenrg_lp.o(.text.LSConfig)
    [Anonymous Symbol]                       0x10040708   Section        0  system_bluenrg_lp.o(.text.LSConfig)
    __arm_cp.24_0                            0x10040768   Number         4  system_bluenrg_lp.o(.text.LSConfig)
    [Anonymous Symbol]                       0x1004076c   Section        0  startup_bluenrg_lp.o(.text.MR_BLE_IRQHandler)
    MessageQueueGet                          0x1004076f   Thumb Code    66  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x1004076e   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x100407b1   Thumb Code    94  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x100407b0   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x1004080f   Thumb Code    30  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x1004080e   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x1004082c   Section        0  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_0                             0x10040a30   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_1                             0x10040a34   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_2                             0x10040a38   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_3                             0x10040a3c   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_4                             0x10040a40   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_5                             0x10040a44   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_6                             0x10040a48   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_7                             0x10040a4c   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_8                             0x10040a50   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_9                             0x10040a54   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_10                            0x10040a58   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_11                            0x10040a5c   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_12                            0x10040a60   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_13                            0x10040a64   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_14                            0x10040a68   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_15                            0x10040a6c   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_16                            0x10040a70   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_17                            0x10040a74   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_18                            0x10040a78   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_19                            0x10040a7c   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_20                            0x10040a80   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_21                            0x10040a84   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_22                            0x10040a88   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_23                            0x10040a8c   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_24                            0x10040a90   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    [Anonymous Symbol]                       0x10040a94   Section        0  startup_bluenrg_lp.o(.text.NMI_IRQHandler)
    [Anonymous Symbol]                       0x10040a96   Section        0  startup_bluenrg_lp.o(.text.PKA_IRQHandler)
    [Anonymous Symbol]                       0x10040a98   Section        0  startup_bluenrg_lp.o(.text.PVD_IRQHandler)
    [Anonymous Symbol]                       0x10040a9a   Section        0  startup_bluenrg_lp.o(.text.PendSV_IRQHandler)
    [Anonymous Symbol]                       0x10040a9c   Section        0  startup_bluenrg_lp.o(.text.RADIO_CTRL_IRQHandler)
    [Anonymous Symbol]                       0x10040a9e   Section        0  startup_bluenrg_lp.o(.text.RCC_IRQHandler)
    [Anonymous Symbol]                       0x10040aa0   Section        0  startup_bluenrg_lp.o(.text.RESET_HANDLER)
    [Anonymous Symbol]                       0x10040aa8   Section        0  startup_bluenrg_lp.o(.text.RTC_IRQHandler)
    [Anonymous Symbol]                       0x10040aac   Section        0  system_bluenrg_lp.o(.text.RadioClockConfig)
    __arm_cp.20_0                            0x10040bd0   Number         4  system_bluenrg_lp.o(.text.RadioClockConfig)
    __arm_cp.20_1                            0x10040bd4   Number         4  system_bluenrg_lp.o(.text.RadioClockConfig)
    [Anonymous Symbol]                       0x10040bd8   Section        0  startup_bluenrg_lp.o(.text.SPI1_IRQHandler)
    [Anonymous Symbol]                       0x10040bda   Section        0  startup_bluenrg_lp.o(.text.SPI2_IRQHandler)
    [Anonymous Symbol]                       0x10040bdc   Section        0  startup_bluenrg_lp.o(.text.SPI3_IRQHandler)
    [Anonymous Symbol]                       0x10040bde   Section        0  startup_bluenrg_lp.o(.text.SVC_IRQHandler)
    SmpsTrimConfig                           0x10040be1   Thumb Code   212  system_bluenrg_lp.o(.text.SmpsTrimConfig)
    [Anonymous Symbol]                       0x10040be0   Section        0  system_bluenrg_lp.o(.text.SmpsTrimConfig)
    __arm_cp.23_0                            0x10040cb4   Number         4  system_bluenrg_lp.o(.text.SmpsTrimConfig)
    __arm_cp.23_1                            0x10040cb8   Number         4  system_bluenrg_lp.o(.text.SmpsTrimConfig)
    __arm_cp.23_2                            0x10040cbc   Number         4  system_bluenrg_lp.o(.text.SmpsTrimConfig)
    __arm_cp.23_3                            0x10040cc0   Number         4  system_bluenrg_lp.o(.text.SmpsTrimConfig)
    [Anonymous Symbol]                       0x10040cc4   Section        0  startup_bluenrg_lp.o(.text.SysTick_IRQHandler)
    [Anonymous Symbol]                       0x10040cc8   Section        0  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.11_0                            0x10040e2c   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.11_2                            0x10040e30   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.11_3                            0x10040e34   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.11_4                            0x10040e38   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.11_5                            0x10040e3c   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.11_6                            0x10040e40   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.11_7                            0x10040e44   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.11_8                            0x10040e48   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.11_9                            0x10040e4c   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.11_10                           0x10040e50   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    [Anonymous Symbol]                       0x10040e54   Section        0  system_bluenrg_lp.o(.text.SystemInit)
    __arm_cp.21_0                            0x10040f24   Number         4  system_bluenrg_lp.o(.text.SystemInit)
    __arm_cp.21_1                            0x10040f28   Number         4  system_bluenrg_lp.o(.text.SystemInit)
    __arm_cp.21_2                            0x10040f2c   Number         4  system_bluenrg_lp.o(.text.SystemInit)
    [Anonymous Symbol]                       0x10040f30   Section        0  system_bluenrg_lp.o(.text.SystemReadyWait)
    __arm_cp.2_0                             0x10040f80   Number         4  system_bluenrg_lp.o(.text.SystemReadyWait)
    [Anonymous Symbol]                       0x10040f84   Section        0  system_bluenrg_lp.o(.text.SystemTimer_TimeoutConfig)
    __arm_cp.0_1                             0x10040fcc   Number         4  system_bluenrg_lp.o(.text.SystemTimer_TimeoutConfig)
    __arm_cp.0_2                             0x10040fd0   Number         4  system_bluenrg_lp.o(.text.SystemTimer_TimeoutConfig)
    [Anonymous Symbol]                       0x10040fd4   Section        0  system_bluenrg_lp.o(.text.SystemTimer_TimeoutExpired)
    __arm_cp.1_0                             0x10040ffc   Number         4  system_bluenrg_lp.o(.text.SystemTimer_TimeoutExpired)
    [Anonymous Symbol]                       0x10041000   Section        0  startup_bluenrg_lp.o(.text.TIM1_IRQHandler)
    TimerInsert                              0x10041005   Thumb Code    72  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x10041004   Section        0  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x1004104c   Section        0  startup_bluenrg_lp.o(.text.UPCONV_IRQHandler)
    [Anonymous Symbol]                       0x1004104e   Section        0  startup_bluenrg_lp.o(.text.USART1_IRQHandler)
    __NVIC_SetPriority                       0x10041051   Thumb Code   124  startup_bluenrg_lp.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x10041050   Section        0  startup_bluenrg_lp.o(.text.__NVIC_SetPriority)
    __arm_cp.36_0                            0x100410cc   Number         4  startup_bluenrg_lp.o(.text.__NVIC_SetPriority)
    __arm_cp.36_1                            0x100410d0   Number         4  startup_bluenrg_lp.o(.text.__NVIC_SetPriority)
    __tagsym$$used.1                         0x100410d4   Number         0  rtx_lib.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x100410d4   Section        0  rtx_lib.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x100410f6   Number         0  rtx_lib.o(.text._mutex_free)
    [Anonymous Symbol]                       0x100410f6   Section        0  rtx_lib.o(.text._mutex_free)
    __tagsym$$used.0                         0x10041108   Number         0  rtx_lib.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x10041108   Section        0  rtx_lib.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x1004113c   Number         0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x1004113c   Section        0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x1004115a   Section        0  rtx_lib.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x10041162   Section        0  main_1.o(.text.main)
    [Anonymous Symbol]                       0x10041180   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x100411a4   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x100411a8   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_0                             0x100411d0   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_1                             0x100411d4   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x100411d8   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.2_0                             0x100411fc   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x10041200   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.5_0                             0x10041270   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x10041274   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.4_0                             0x100412e4   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x100412e8   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.4_0                             0x1004130c   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x10041310   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.7_0                             0x10041334   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x10041338   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.2_0                             0x10041358   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x1004135c   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.5_0                             0x10041380   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x10041384   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    [Anonymous Symbol]                       0x100413c4   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x100413cc   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x100413ce   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x10041446   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x10041494   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x100414c2   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x100414ec   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x10041522   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x1004155f   Thumb Code   188  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x1004155e   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x1004161c   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    __arm_cp.0_0                             0x1004163c   Number         4  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    [Anonymous Symbol]                       0x10041640   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x100416a8   Number         4  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadBlock                         0x100416ad   Thumb Code    52  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x100416ac   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x100416e1   Thumb Code   140  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x100416e0   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayRemove                   0x1004176d   Thumb Code    68  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x1004176c   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x100417b0   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x100417fc   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x10041810   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x1004183c   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x10041854   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x10041878   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x1004188c   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x10041894   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x100418d0   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x100418f4   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_1                             0x10041910   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x10041914   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x10041931   Thumb Code   112  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x10041930   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x100419a0   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    os_kernel_is_active                      0x100419a5   Thumb Code    40  rtx_lib.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x100419a4   Section        0  rtx_lib.o(.text.os_kernel_is_active)
    __arm_cp.2_0                             0x100419cc   Number         4  rtx_lib.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x100419d0   Section        0  startup_bluenrg_lp.o(.text.setInterruptPriority)
    svcRtxDelay                              0x10041aaf   Thumb Code    24  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x10041aae   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxKernelGetState                     0x10041ac9   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x10041ac8   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.6_0                             0x10041ad0   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelInitialize                   0x10041ad5   Thumb Code   308  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x10041ad4   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_0                            0x10041c08   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_1                            0x10041c0c   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_2                            0x10041c10   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxMessageQueueGet                    0x10041c15   Thumb Code   200  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x10041c14   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.22_0                            0x10041cdc   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x10041ce1   Thumb Code   428  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x10041ce0   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_0                             0x10041e8c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_1                             0x10041e90   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_2                             0x10041e94   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_3                             0x10041e98   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_4                             0x10041e9c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_5                             0x10041ea0   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x10041ea5   Thumb Code   172  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x10041ea4   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x10041f51   Thumb Code   148  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x10041f50   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x10041fe5   Thumb Code   176  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x10041fe4   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.13_0                            0x10042094   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x10042099   Thumb Code   108  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x10042098   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.8_0                             0x10042104   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x10042109   Thumb Code   184  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x10042108   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.11_0                            0x100421c0   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    __tagsym$$used.4                         0x100421c4   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.5                         0x10042234   Number         0  rtx_lib.o(.rodata)
    os_idle_thread_attr                      0x1004226c   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x1004226c   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x10042290   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x10042290   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x100422a8   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x100422a8   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x100422cc   Section        0  rtx_kernel.o(.rodata.str1.4)
    __tagsym$$used.1                         0x20000004   Number         0  system_bluenrg_lp.o(.bss.ram_vr)
    __tagsym$$used.0                         0x200000c0   Number         0  system_bluenrg_lp.o(.bss.__blue_RAM)
    os_isr_queue                             0x20000408   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x20000408   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x20000448   Data       32768  rtx_lib.o(.bss.os)
    os_timer_mq_cb                           0x20008448   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x20008448   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x2000847c   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x2000847c   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x200084cc   Data          68  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x200084cc   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20008510   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x20008558   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x20008558   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x20008758   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x20008758   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    os_kernel_is_active.os_kernel_active     0x20008958   Data           1  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x20008958   Section        0  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    Image$$ZI$$Limit                          - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __vector_table                           0x10040000   Data         192  startup_bluenrg_lp.o(.intvec)
    __main                                   0x100400c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x100400c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x100400c9   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x100400c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x100400d9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x10040105   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x10040121   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x1004013d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_1                       0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x10040141   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x10040143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x10040143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x10040143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x10040143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x10040143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x10040143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x10040143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x10040145   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x10040145   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x10040145   Thumb Code     0  __rtentry7.o(.ARM.Collect$$rtentry$$00000007)
    __rt_entry_postsh_1                      0x10040149   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x10040151   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x10040155   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x10040155   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x10040161   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x10040163   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x10040163   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x10040167   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy4                          0x1004016d   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x1004016d   Thumb Code     0  rt_memcpy.o(.emb_text)
    __aeabi_memcpy                           0x100401a5   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x100401a5   Thumb Code     0  rt_memcpy.o(.text)
    _memset_w                                0x10040227   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x10040241   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x1004025f   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x1004025f   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x10040263   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x10040263   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x10040263   Thumb Code     4  rt_memclr.o(.text)
    __aeabi_uidiv                            0x10040269   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_uidivmod                         0x10040269   Thumb Code    20  aeabi_sdiv.o(.text)
    __aeabi_idiv                             0x1004027d   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_idivmod                          0x1004027d   Thumb Code   338  aeabi_sdiv.o(.text)
    exit                                     0x100403d5   Thumb Code    16  exit.o(.text)
    _sys_exit                                0x100403e5   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x100403f1   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x100403f1   Thumb Code     2  use_no_semi.o(.text)
    ADC_IRQHandler                           0x100403f3   Thumb Code     2  startup_bluenrg_lp.o(.text.ADC_IRQHandler)
    __semihosting_library_function           0x100403f3   Thumb Code     0  indicate_semi.o(.text)
    BLE_AES_IRQHandler                       0x100403f5   Thumb Code     2  startup_bluenrg_lp.o(.text.BLE_AES_IRQHandler)
    BLE_ERROR_IRQHandler                     0x100403f7   Thumb Code     2  startup_bluenrg_lp.o(.text.BLE_ERROR_IRQHandler)
    BLE_RXTX_SEQ_IRQHandler                  0x100403f9   Thumb Code     2  startup_bluenrg_lp.o(.text.BLE_RXTX_SEQ_IRQHandler)
    BLE_TX_RX_IRQHandler                     0x100403fb   Thumb Code     2  startup_bluenrg_lp.o(.text.BLE_TX_RX_IRQHandler)
    BLE_WKUP_IRQHandler                      0x100403fd   Thumb Code     2  startup_bluenrg_lp.o(.text.BLE_WKUP_IRQHandler)
    CPU_WKUP_IRQHandler                      0x100403ff   Thumb Code     2  startup_bluenrg_lp.o(.text.CPU_WKUP_IRQHandler)
    DMA_IRQHandler                           0x10040401   Thumb Code     2  startup_bluenrg_lp.o(.text.DMA_IRQHandler)
    FLASH_IRQHandler                         0x10040403   Thumb Code     2  startup_bluenrg_lp.o(.text.FLASH_IRQHandler)
    GPIOA_IRQHandler                         0x10040405   Thumb Code     2  startup_bluenrg_lp.o(.text.GPIOA_IRQHandler)
    GPIOB_IRQHandler                         0x10040407   Thumb Code     2  startup_bluenrg_lp.o(.text.GPIOB_IRQHandler)
    HardFault_IRQHandler                     0x10040409   Thumb Code     2  startup_bluenrg_lp.o(.text.HardFault_IRQHandler)
    I2C1_IRQHandler                          0x1004040b   Thumb Code     2  startup_bluenrg_lp.o(.text.I2C1_IRQHandler)
    I2C2_IRQHandler                          0x1004040d   Thumb Code     2  startup_bluenrg_lp.o(.text.I2C2_IRQHandler)
    LPUART1_IRQHandler                       0x10040705   Thumb Code     2  startup_bluenrg_lp.o(.text.LPUART1_IRQHandler)
    MR_BLE_IRQHandler                        0x1004076d   Thumb Code     2  startup_bluenrg_lp.o(.text.MR_BLE_IRQHandler)
    MrBleBiasTrimConfig                      0x1004082d   Thumb Code   516  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    NMI_IRQHandler                           0x10040a95   Thumb Code     2  startup_bluenrg_lp.o(.text.NMI_IRQHandler)
    PKA_IRQHandler                           0x10040a97   Thumb Code     2  startup_bluenrg_lp.o(.text.PKA_IRQHandler)
    PVD_IRQHandler                           0x10040a99   Thumb Code     2  startup_bluenrg_lp.o(.text.PVD_IRQHandler)
    PendSV_IRQHandler                        0x10040a9b   Thumb Code     2  startup_bluenrg_lp.o(.text.PendSV_IRQHandler)
    RADIO_CTRL_IRQHandler                    0x10040a9d   Thumb Code     2  startup_bluenrg_lp.o(.text.RADIO_CTRL_IRQHandler)
    RCC_IRQHandler                           0x10040a9f   Thumb Code     2  startup_bluenrg_lp.o(.text.RCC_IRQHandler)
    RESET_HANDLER                            0x10040aa1   Thumb Code     8  startup_bluenrg_lp.o(.text.RESET_HANDLER)
    RTC_IRQHandler                           0x10040aa9   Thumb Code     2  startup_bluenrg_lp.o(.text.RTC_IRQHandler)
    RadioClockConfig                         0x10040aad   Thumb Code   292  system_bluenrg_lp.o(.text.RadioClockConfig)
    SPI1_IRQHandler                          0x10040bd9   Thumb Code     2  startup_bluenrg_lp.o(.text.SPI1_IRQHandler)
    SPI2_IRQHandler                          0x10040bdb   Thumb Code     2  startup_bluenrg_lp.o(.text.SPI2_IRQHandler)
    SPI3_IRQHandler                          0x10040bdd   Thumb Code     2  startup_bluenrg_lp.o(.text.SPI3_IRQHandler)
    SVC_IRQHandler                           0x10040bdf   Thumb Code     2  startup_bluenrg_lp.o(.text.SVC_IRQHandler)
    SysTick_IRQHandler                       0x10040cc5   Thumb Code     2  startup_bluenrg_lp.o(.text.SysTick_IRQHandler)
    SystemClockConfig                        0x10040cc9   Thumb Code   356  system_bluenrg_lp.o(.text.SystemClockConfig)
    SystemInit                               0x10040e55   Thumb Code   208  system_bluenrg_lp.o(.text.SystemInit)
    SystemReadyWait                          0x10040f31   Thumb Code    80  system_bluenrg_lp.o(.text.SystemReadyWait)
    SystemTimer_TimeoutConfig                0x10040f85   Thumb Code    72  system_bluenrg_lp.o(.text.SystemTimer_TimeoutConfig)
    SystemTimer_TimeoutExpired               0x10040fd5   Thumb Code    40  system_bluenrg_lp.o(.text.SystemTimer_TimeoutExpired)
    TIM1_IRQHandler                          0x10041001   Thumb Code     2  startup_bluenrg_lp.o(.text.TIM1_IRQHandler)
    UPCONV_IRQHandler                        0x1004104d   Thumb Code     2  startup_bluenrg_lp.o(.text.UPCONV_IRQHandler)
    USART1_IRQHandler                        0x1004104f   Thumb Code     2  startup_bluenrg_lp.o(.text.USART1_IRQHandler)
    _mutex_acquire                           0x100410d5   Thumb Code    34  rtx_lib.o(.text._mutex_acquire)
    _mutex_free                              0x100410f7   Thumb Code    18  rtx_lib.o(.text._mutex_free)
    _mutex_initialize                        0x10041109   Thumb Code    52  rtx_lib.o(.text._mutex_initialize)
    _mutex_release                           0x1004113d   Thumb Code    30  rtx_lib.o(.text._mutex_release)
    _platform_post_stackheap_init            0x1004115b   Thumb Code     8  rtx_lib.o(.text._platform_post_stackheap_init)
    main                                     0x10041163   Thumb Code    28  main_1.o(.text.main)
    osDelay                                  0x10041181   Thumb Code    36  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x100411a9   Thumb Code    40  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x100411d9   Thumb Code    36  rtx_kernel.o(.text.osKernelInitialize)
    osMessageQueueGet                        0x10041201   Thumb Code   112  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueuePut                        0x10041275   Thumb Code   112  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x100412e9   Thumb Code    36  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x10041311   Thumb Code    36  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x10041339   Thumb Code    32  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x1004135d   Thumb Code    36  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x10041385   Thumb Code    64  rtx_config.o(.text.osRtxErrorNotify)
    osRtxKernelErrorNotify                   0x100413c5   Thumb Code     8  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelPreInit                       0x100413cd   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x100413cf   Thumb Code   120  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x10041447   Thumb Code    78  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x10041495   Thumb Code    46  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x100414c3   Thumb Code    42  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x100414ed   Thumb Code    54  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x10041523   Thumb Code    60  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x1004161d   Thumb Code    32  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxPostProcess                         0x10041641   Thumb Code   104  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDispatch                      0x100417b1   Thumb Code    76  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x100417fd   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x10041811   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x1004183d   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x10041855   Thumb Code    36  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x10041879   Thumb Code    20  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x1004188d   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadWaitEnter                     0x10041895   Thumb Code    60  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x100418d1   Thumb Code    34  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTimerSetup                          0x100418f5   Thumb Code    28  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x10041915   Thumb Code    28  rtx_timer.o(.text.osRtxTimerThread)
    setInterruptPriority                     0x100419d1   Thumb Code   222  startup_bluenrg_lp.o(.text.setInterruptPriority)
    osRtxConfig                              0x100421c4   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x10042234   Data          56  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x100422d8   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x10042308   Number         0  anon$$obj.o(Region$$Table)
    RAM_VR                                   0x20000004   Data          44  system_bluenrg_lp.o(.bss.ram_vr)
    __blue_RAM                               0x200000c0   Data         668  system_bluenrg_lp.o(.bss.__blue_RAM)
    SystemCoreClock                          0x20000360   Data           4  system_bluenrg_lp.o(.data.SystemCoreClock)
    osRtxInfo                                0x20000364   Data         164  rtx_kernel.o(.data.os)
    Image$$ARM_LIB_STACK$$ZI$$Limit          0x20008000   Number         0  anon$$obj.o ABSOLUTE
    .bss.os.msgqueue.cb$$Base                0x20008448   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x2000847c   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200084cc   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x20008554   Number         0  rtx_lib.o(.bss.os.thread.cb)



==============================================================================

Memory Map of the image

  Image Entry point : 0x100400c1

  Load Region LR_IROM2 (Base: 0x10040000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Execution Region REGION_FLASH_BOOTLOADER (Exec base: 0x10040000, Load base: 0x10040000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    **** No section assigned to this execution region ****



  Load Region LR_IROM1 (Base: 0x10040000, Size: 0x000023b0, Max: 0x00040000, ABSOLUTE)

    Execution Region REGION_FLASH (Exec base: 0x10040000, Load base: 0x10040000, Size: 0x00002308, Max: 0x0003f000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x10040000   0x10040000   0x000000c0   Data   RO          134    .intvec             startup_bluenrg_lp.o
    0x100400c0   0x100400c0   0x00000008   Code   RO          713  * !!!main             c_p.l(__main.o)
    0x100400c8   0x100400c8   0x0000003c   Code   RO          897    !!!scatter          c_p.l(__scatter.o)
    0x10040104   0x10040104   0x0000001a   Code   RO          899    !!handler_copy      c_p.l(__scatter_copy.o)
    0x1004011e   0x1004011e   0x00000002   PAD
    0x10040120   0x10040120   0x0000001c   Code   RO          901    !!handler_zi        c_p.l(__scatter_zi.o)
    0x1004013c   0x1004013c   0x00000002   Code   RO          754    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          772    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          774    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          776    .ARM.Collect$$libinit$$00000006  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          779    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          781    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          783    .ARM.Collect$$libinit$$00000010  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          786    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          788    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          790    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          792    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          794    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          796    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          798    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          800    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          802    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          804    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          806    .ARM.Collect$$libinit$$00000027  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          810    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          812    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          814    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          816    .ARM.Collect$$libinit$$00000034  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000002   Code   RO          817    .ARM.Collect$$libinit$$00000035  c_p.l(libinit2.o)
    0x10040140   0x10040140   0x00000002   Code   RO          852    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x10040142   0x10040142   0x00000000   Code   RO          880    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x10040142   0x10040142   0x00000000   Code   RO          882    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x10040142   0x10040142   0x00000000   Code   RO          885    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x10040142   0x10040142   0x00000000   Code   RO          888    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x10040142   0x10040142   0x00000000   Code   RO          890    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x10040142   0x10040142   0x00000000   Code   RO          893    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x10040142   0x10040142   0x00000002   Code   RO          894    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x10040144   0x10040144   0x00000000   Code   RO          715    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x10040144   0x10040144   0x00000000   Code   RO          721    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x10040144   0x10040144   0x00000004   Code   RO          735    .ARM.Collect$$rtentry$$00000007  c_p.l(__rtentry7.o)
    0x10040148   0x10040148   0x00000008   Code   RO          722    .ARM.Collect$$rtentry$$00000008  c_p.l(__rtentry2.o)
    0x10040150   0x10040150   0x00000004   Code   RO          724    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x10040154   0x10040154   0x00000000   Code   RO          726    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x10040154   0x10040154   0x00000008   Code   RO          727    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x1004015c   0x1004015c   0x00000004   Code   RO          736    .ARM.Collect$$rtentry$$00002718  c_p.l(__rtentry7.o)
    0x10040160   0x10040160   0x00000002   Code   RO          763    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x10040162   0x10040162   0x00000000   Code   RO          826    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x10040162   0x10040162   0x00000004   Code   RO          827    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x10040166   0x10040166   0x00000006   Code   RO          828    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x1004016c   0x1004016c   0x00000038   Code   RO          703    .emb_text           c_p.l(rt_memcpy.o)
    0x100401a4   0x100401a4   0x00000082   Code   RO          704    .text               c_p.l(rt_memcpy.o)
    0x10040226   0x10040226   0x00000040   Code   RO          707    .text               c_p.l(rt_memclr.o)
    0x10040266   0x10040266   0x00000002   PAD
    0x10040268   0x10040268   0x0000016c   Code   RO          709    .text               c_p.l(aeabi_sdiv.o)
    0x100403d4   0x100403d4   0x00000010   Code   RO          745    .text               c_p.l(exit.o)
    0x100403e4   0x100403e4   0x0000000c   Code   RO          818    .text               c_p.l(sys_exit.o)
    0x100403f0   0x100403f0   0x00000002   Code   RO          822    .text               c_p.l(use_no_semi.o)
    0x100403f2   0x100403f2   0x00000000   Code   RO          824    .text               c_p.l(indicate_semi.o)
    0x100403f2   0x100403f2   0x00000002   Code   RO           94    .text.ADC_IRQHandler  startup_bluenrg_lp.o
    0x100403f4   0x100403f4   0x00000002   Code   RO          108    .text.BLE_AES_IRQHandler  startup_bluenrg_lp.o
    0x100403f6   0x100403f6   0x00000002   Code   RO          110    .text.BLE_ERROR_IRQHandler  startup_bluenrg_lp.o
    0x100403f8   0x100403f8   0x00000002   Code   RO          120    .text.BLE_RXTX_SEQ_IRQHandler  startup_bluenrg_lp.o
    0x100403fa   0x100403fa   0x00000002   Code   RO          106    .text.BLE_TX_RX_IRQHandler  startup_bluenrg_lp.o
    0x100403fc   0x100403fc   0x00000002   Code   RO          118    .text.BLE_WKUP_IRQHandler  startup_bluenrg_lp.o
    0x100403fe   0x100403fe   0x00000002   Code   RO          116    .text.CPU_WKUP_IRQHandler  startup_bluenrg_lp.o
    0x10040400   0x10040400   0x00000002   Code   RO          104    .text.DMA_IRQHandler  startup_bluenrg_lp.o
    0x10040402   0x10040402   0x00000002   Code   RO           70    .text.FLASH_IRQHandler  startup_bluenrg_lp.o
    0x10040404   0x10040404   0x00000002   Code   RO          100    .text.GPIOA_IRQHandler  startup_bluenrg_lp.o
    0x10040406   0x10040406   0x00000002   Code   RO          102    .text.GPIOB_IRQHandler  startup_bluenrg_lp.o
    0x10040408   0x10040408   0x00000002   Code   RO           62    .text.HardFault_IRQHandler  startup_bluenrg_lp.o
    0x1004040a   0x1004040a   0x00000002   Code   RO           76    .text.I2C1_IRQHandler  startup_bluenrg_lp.o
    0x1004040c   0x1004040c   0x00000002   Code   RO           78    .text.I2C2_IRQHandler  startup_bluenrg_lp.o
    0x1004040e   0x1004040e   0x00000002   PAD
    0x10040410   0x10040410   0x0000001c   Code   RO          158    .text.LL_APB2_EnableClock  system_bluenrg_lp.o
    0x1004042c   0x1004042c   0x00000014   Code   RO          154    .text.LL_APB2_ForceReset  system_bluenrg_lp.o
    0x10040440   0x10040440   0x00000018   Code   RO          156    .text.LL_APB2_ReleaseReset  system_bluenrg_lp.o
    0x10040458   0x10040458   0x0000001a   Code   RO          174    .text.LL_FLASH_SetWaitStates  system_bluenrg_lp.o
    0x10040472   0x10040472   0x00000002   PAD
    0x10040474   0x10040474   0x00000018   Code   RO          186    .text.LL_PWR_EnableRAMBankRet  system_bluenrg_lp.o
    0x1004048c   0x1004048c   0x00000010   Code   RO          196    .text.LL_PWR_IsSMPSReady  system_bluenrg_lp.o
    0x1004049c   0x1004049c   0x00000024   Code   RO          206    .text.LL_PWR_SetLSILPMUTrim  system_bluenrg_lp.o
    0x100404c0   0x100404c0   0x00000024   Code   RO          208    .text.LL_PWR_SetMRTrim  system_bluenrg_lp.o
    0x100404e4   0x100404e4   0x00000018   Code   RO          198    .text.LL_PWR_SetSMPSBOM  system_bluenrg_lp.o
    0x100404fc   0x100404fc   0x0000001c   Code   RO          212    .text.LL_PWR_SetSMPSOpenMode  system_bluenrg_lp.o
    0x10040518   0x10040518   0x0000002c   Code   RO          210    .text.LL_PWR_SetSMPSTrim  system_bluenrg_lp.o
    0x10040544   0x10040544   0x00000044   Code   RO          180    .text.LL_RCC_DIRECT_HSE_Enable  system_bluenrg_lp.o
    0x10040588   0x10040588   0x00000010   Code   RO          166    .text.LL_RCC_HSE_Enable  system_bluenrg_lp.o
    0x10040598   0x10040598   0x00000010   Code   RO          168    .text.LL_RCC_HSE_IsReady  system_bluenrg_lp.o
    0x100405a8   0x100405a8   0x00000024   Code   RO          192    .text.LL_RCC_HSE_SetCapacitorTuning  system_bluenrg_lp.o
    0x100405cc   0x100405cc   0x0000001c   Code   RO          194    .text.LL_RCC_HSE_SetCurrentControl  system_bluenrg_lp.o
    0x100405e8   0x100405e8   0x00000024   Code   RO          202    .text.LL_RCC_HSI_SetCalibTrimming  system_bluenrg_lp.o
    0x1004060c   0x1004060c   0x00000018   Code   RO          220    .text.LL_RCC_LSCO_SetSource  system_bluenrg_lp.o
    0x10040624   0x10040624   0x0000000c   Code   RO          218    .text.LL_RCC_LSE_Disable  system_bluenrg_lp.o
    0x10040630   0x10040630   0x0000000c   Code   RO          214    .text.LL_RCC_LSI_Disable  system_bluenrg_lp.o
    0x1004063c   0x1004063c   0x0000000c   Code   RO          222    .text.LL_RCC_LSI_Enable  system_bluenrg_lp.o
    0x10040648   0x10040648   0x0000000c   Code   RO          216    .text.LL_RCC_LSI_IsReady  system_bluenrg_lp.o
    0x10040654   0x10040654   0x00000024   Code   RO          204    .text.LL_RCC_LSI_SetTrimming  system_bluenrg_lp.o
    0x10040678   0x10040678   0x00000010   Code   RO          176    .text.LL_RCC_RC64MPLL_Enable  system_bluenrg_lp.o
    0x10040688   0x10040688   0x00000014   Code   RO          178    .text.LL_RCC_RC64MPLL_IsReady  system_bluenrg_lp.o
    0x1004069c   0x1004069c   0x00000018   Code   RO          150    .text.LL_RCC_SetRC64MPLLPrescaler  system_bluenrg_lp.o
    0x100406b4   0x100406b4   0x0000001c   Code   RO          152    .text.LL_RCC_SetRFClockSource  system_bluenrg_lp.o
    0x100406d0   0x100406d0   0x0000001c   Code   RO          200    .text.LL_RCC_SetSMPSPrescaler  system_bluenrg_lp.o
    0x100406ec   0x100406ec   0x0000000c   Code   RO          172    .text.LL_SYSCFG_GetDeviceRevision  system_bluenrg_lp.o
    0x100406f8   0x100406f8   0x0000000c   Code   RO          170    .text.LL_SYSCFG_GetDeviceVersion  system_bluenrg_lp.o
    0x10040704   0x10040704   0x00000002   Code   RO           88    .text.LPUART1_IRQHandler  startup_bluenrg_lp.o
    0x10040706   0x10040706   0x00000002   PAD
    0x10040708   0x10040708   0x00000064   Code   RO          190    .text.LSConfig      system_bluenrg_lp.o
    0x1004076c   0x1004076c   0x00000002   Code   RO          114    .text.MR_BLE_IRQHandler  startup_bluenrg_lp.o
    0x1004076e   0x1004076e   0x00000042   Code   RO          645    .text.MessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x100407b0   0x100407b0   0x0000005e   Code   RO          639    .text.MessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x1004080e   0x1004080e   0x0000001e   Code   RO          637    .text.MessageQueueRemove  RTX_CM0.lib(rtx_msgqueue.o)
    0x1004082c   0x1004082c   0x00000268   Code   RO          148    .text.MrBleBiasTrimConfig  system_bluenrg_lp.o
    0x10040a94   0x10040a94   0x00000002   Code   RO           60    .text.NMI_IRQHandler  startup_bluenrg_lp.o
    0x10040a96   0x10040a96   0x00000002   Code   RO           96    .text.PKA_IRQHandler  startup_bluenrg_lp.o
    0x10040a98   0x10040a98   0x00000002   Code   RO           74    .text.PVD_IRQHandler  startup_bluenrg_lp.o
    0x10040a9a   0x10040a9a   0x00000002   Code   RO           66    .text.PendSV_IRQHandler  startup_bluenrg_lp.o
    0x10040a9c   0x10040a9c   0x00000002   Code   RO          112    .text.RADIO_CTRL_IRQHandler  startup_bluenrg_lp.o
    0x10040a9e   0x10040a9e   0x00000002   Code   RO           72    .text.RCC_IRQHandler  startup_bluenrg_lp.o
    0x10040aa0   0x10040aa0   0x00000008   Code   RO          128    .text.RESET_HANDLER  startup_bluenrg_lp.o
    0x10040aa8   0x10040aa8   0x00000002   Code   RO           92    .text.RTC_IRQHandler  startup_bluenrg_lp.o
    0x10040aaa   0x10040aaa   0x00000002   PAD
    0x10040aac   0x10040aac   0x0000012c   Code   RO          182    .text.RadioClockConfig  system_bluenrg_lp.o
    0x10040bd8   0x10040bd8   0x00000002   Code   RO           80    .text.SPI1_IRQHandler  startup_bluenrg_lp.o
    0x10040bda   0x10040bda   0x00000002   Code   RO           82    .text.SPI2_IRQHandler  startup_bluenrg_lp.o
    0x10040bdc   0x10040bdc   0x00000002   Code   RO           84    .text.SPI3_IRQHandler  startup_bluenrg_lp.o
    0x10040bde   0x10040bde   0x00000002   Code   RO           64    .text.SVC_IRQHandler  startup_bluenrg_lp.o
    0x10040be0   0x10040be0   0x000000e4   Code   RO          188    .text.SmpsTrimConfig  system_bluenrg_lp.o
    0x10040cc4   0x10040cc4   0x00000002   Code   RO           68    .text.SysTick_IRQHandler  startup_bluenrg_lp.o
    0x10040cc6   0x10040cc6   0x00000002   PAD
    0x10040cc8   0x10040cc8   0x0000018c   Code   RO          164    .text.SystemClockConfig  system_bluenrg_lp.o
    0x10040e54   0x10040e54   0x000000dc   Code   RO          184    .text.SystemInit    system_bluenrg_lp.o
    0x10040f30   0x10040f30   0x00000054   Code   RO          146    .text.SystemReadyWait  system_bluenrg_lp.o
    0x10040f84   0x10040f84   0x00000050   Code   RO          142    .text.SystemTimer_TimeoutConfig  system_bluenrg_lp.o
    0x10040fd4   0x10040fd4   0x0000002c   Code   RO          144    .text.SystemTimer_TimeoutExpired  system_bluenrg_lp.o
    0x10041000   0x10041000   0x00000002   Code   RO           90    .text.TIM1_IRQHandler  startup_bluenrg_lp.o
    0x10041002   0x10041002   0x00000002   PAD
    0x10041004   0x10041004   0x00000048   Code   RO          470    .text.TimerInsert   RTX_CM0.lib(rtx_timer.o)
    0x1004104c   0x1004104c   0x00000002   Code   RO           98    .text.UPCONV_IRQHandler  startup_bluenrg_lp.o
    0x1004104e   0x1004104e   0x00000002   Code   RO           86    .text.USART1_IRQHandler  startup_bluenrg_lp.o
    0x10041050   0x10041050   0x00000084   Code   RO          132    .text.__NVIC_SetPriority  startup_bluenrg_lp.o
    0x100410d4   0x100410d4   0x00000022   Code   RO           21    .text._mutex_acquire  rtx_lib.o
    0x100410f6   0x100410f6   0x00000012   Code   RO           25    .text._mutex_free   rtx_lib.o
    0x10041108   0x10041108   0x00000034   Code   RO           19    .text._mutex_initialize  rtx_lib.o
    0x1004113c   0x1004113c   0x0000001e   Code   RO           23    .text._mutex_release  rtx_lib.o
    0x1004115a   0x1004115a   0x00000008   Code   RO           13    .text._platform_post_stackheap_init  rtx_lib.o
    0x10041162   0x10041162   0x0000001c   Code   RO            3    .text.main          main_1.o
    0x1004117e   0x1004117e   0x00000002   PAD
    0x10041180   0x10041180   0x00000028   Code   RO          436    .text.osDelay       RTX_CM0.lib(rtx_delay.o)
    0x100411a8   0x100411a8   0x00000030   Code   RO          244    .text.osKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x100411d8   0x100411d8   0x00000028   Code   RO          238    .text.osKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x10041200   0x10041200   0x00000074   Code   RO          613    .text.osMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x10041274   0x10041274   0x00000074   Code   RO          611    .text.osMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x100412e8   0x100412e8   0x00000028   Code   RO          502    .text.osMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x10041310   0x10041310   0x00000028   Code   RO          508    .text.osMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x10041338   0x10041338   0x00000024   Code   RO          498    .text.osMutexNew    RTX_CM0.lib(rtx_mutex.o)
    0x1004135c   0x1004135c   0x00000028   Code   RO          504    .text.osMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x10041384   0x10041384   0x00000040   Code   RO           51    .text.osRtxErrorNotify  rtx_config.o
    0x100413c4   0x100413c4   0x00000008   Code   RO          236    .text.osRtxKernelErrorNotify  RTX_CM0.lib(rtx_kernel.o)
    0x100413cc   0x100413cc   0x00000002   Code   RO          234    .text.osRtxKernelPreInit  RTX_CM0.lib(rtx_kernel.o)
    0x100413ce   0x100413ce   0x00000078   Code   RO          539    .text.osRtxMemoryAlloc  RTX_CM0.lib(rtx_memory.o)
    0x10041446   0x10041446   0x0000004e   Code   RO          541    .text.osRtxMemoryFree  RTX_CM0.lib(rtx_memory.o)
    0x10041494   0x10041494   0x0000002e   Code   RO          537    .text.osRtxMemoryInit  RTX_CM0.lib(rtx_memory.o)
    0x100414c2   0x100414c2   0x0000002a   Code   RO          553    .text.osRtxMemoryPoolAlloc  RTX_CM0.lib(rtx_mempool.o)
    0x100414ec   0x100414ec   0x00000036   Code   RO          555    .text.osRtxMemoryPoolFree  RTX_CM0.lib(rtx_mempool.o)
    0x10041522   0x10041522   0x0000003c   Code   RO          551    .text.osRtxMemoryPoolInit  RTX_CM0.lib(rtx_mempool.o)
    0x1004155e   0x1004155e   0x000000bc   Code   RO          635    .text.osRtxMessageQueuePostProcess  RTX_CM0.lib(rtx_msgqueue.o)
    0x1004161a   0x1004161a   0x00000002   PAD
    0x1004161c   0x1004161c   0x00000024   Code   RO          603    .text.osRtxMessageQueueTimerSetup  RTX_CM0.lib(rtx_msgqueue.o)
    0x10041640   0x10041640   0x0000006c   Code   RO          665    .text.osRtxPostProcess  RTX_CM0.lib(rtx_system.o)
    0x100416ac   0x100416ac   0x00000034   Code   RO          320    .text.osRtxThreadBlock  RTX_CM0.lib(rtx_thread.o)
    0x100416e0   0x100416e0   0x0000008c   Code   RO          328    .text.osRtxThreadDelayInsert  RTX_CM0.lib(rtx_thread.o)
    0x1004176c   0x1004176c   0x00000044   Code   RO          324    .text.osRtxThreadDelayRemove  RTX_CM0.lib(rtx_thread.o)
    0x100417b0   0x100417b0   0x0000004c   Code   RO          318    .text.osRtxThreadDispatch  RTX_CM0.lib(rtx_thread.o)
    0x100417fc   0x100417fc   0x00000014   Code   RO          304    .text.osRtxThreadListGet  RTX_CM0.lib(rtx_thread.o)
    0x10041810   0x10041810   0x0000002c   Code   RO          302    .text.osRtxThreadListPut  RTX_CM0.lib(rtx_thread.o)
    0x1004183c   0x1004183c   0x00000018   Code   RO          308    .text.osRtxThreadListRemove  RTX_CM0.lib(rtx_thread.o)
    0x10041854   0x10041854   0x00000024   Code   RO          306    .text.osRtxThreadListSort  RTX_CM0.lib(rtx_thread.o)
    0x10041878   0x10041878   0x00000014   Code   RO          310    .text.osRtxThreadReadyPut  RTX_CM0.lib(rtx_thread.o)
    0x1004188c   0x1004188c   0x00000006   Code   RO          314    .text.osRtxThreadRegPtr  RTX_CM0.lib(rtx_thread.o)
    0x10041892   0x10041892   0x00000002   PAD
    0x10041894   0x10041894   0x0000003c   Code   RO          326    .text.osRtxThreadWaitEnter  RTX_CM0.lib(rtx_thread.o)
    0x100418d0   0x100418d0   0x00000022   Code   RO          322    .text.osRtxThreadWaitExit  RTX_CM0.lib(rtx_thread.o)
    0x100418f2   0x100418f2   0x00000002   PAD
    0x100418f4   0x100418f4   0x00000020   Code   RO          452    .text.osRtxTimerSetup  RTX_CM0.lib(rtx_timer.o)
    0x10041914   0x10041914   0x0000001c   Code   RO          456    .text.osRtxTimerThread  RTX_CM0.lib(rtx_timer.o)
    0x10041930   0x10041930   0x00000074   Code   RO          454    .text.osRtxTimerTick  RTX_CM0.lib(rtx_timer.o)
    0x100419a4   0x100419a4   0x0000002c   Code   RO           17    .text.os_kernel_is_active  rtx_lib.o
    0x100419d0   0x100419d0   0x000000de   Code   RO          130    .text.setInterruptPriority  startup_bluenrg_lp.o
    0x10041aae   0x10041aae   0x00000018   Code   RO          440    .text.svcRtxDelay   RTX_CM0.lib(rtx_delay.o)
    0x10041ac6   0x10041ac6   0x00000002   PAD
    0x10041ac8   0x10041ac8   0x0000000c   Code   RO          246    .text.svcRtxKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x10041ad4   0x10041ad4   0x00000140   Code   RO          276    .text.svcRtxKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x10041c14   0x10041c14   0x000000cc   Code   RO          647    .text.svcRtxMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x10041ce0   0x10041ce0   0x000001c4   Code   RO          605    .text.svcRtxMessageQueueNew  RTX_CM0.lib(rtx_msgqueue.o)
    0x10041ea4   0x10041ea4   0x000000ac   Code   RO          643    .text.svcRtxMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x10041f50   0x10041f50   0x00000094   Code   RO          514    .text.svcRtxMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x10041fe4   0x10041fe4   0x000000b4   Code   RO          520    .text.svcRtxMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x10042098   0x10042098   0x00000070   Code   RO          510    .text.svcRtxMutexNew  RTX_CM0.lib(rtx_mutex.o)
    0x10042108   0x10042108   0x000000bc   Code   RO          516    .text.svcRtxMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x100421c4   0x100421c4   0x00000070   Data   RO           31    .rodata             rtx_lib.o
    0x10042234   0x10042234   0x00000038   Data   RO           34    .rodata             rtx_lib.o
    0x1004226c   0x1004226c   0x00000024   Data   RO           28    .rodata.os_idle_thread_attr  rtx_lib.o
    0x10042290   0x10042290   0x00000018   Data   RO           30    .rodata.os_timer_mq_attr  rtx_lib.o
    0x100422a8   0x100422a8   0x00000024   Data   RO           29    .rodata.os_timer_thread_attr  rtx_lib.o
    0x100422cc   0x100422cc   0x0000000b   Data   RO          292    .rodata.str1.4      RTX_CM0.lib(rtx_kernel.o)
    0x100422d7   0x100422d7   0x00000001   PAD
    0x100422d8   0x100422d8   0x00000030   Data   RO          896    Region$$Table       anon$$obj.o


    Execution Region REGION_FLASH_NVM (Exec base: 0x1007f000, Load base: 0x10042308, Size: 0x00000000, Max: 0x00001000, ABSOLUTE, UNINIT)

    **** No section assigned to this execution region ****


    Execution Region ram_vr_block (Exec base: 0x20000004, Load base: 0x10042308, Size: 0x0000002c, Max: 0x0000002c, ABSOLUTE, UNINIT)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000004        -       0x0000002c   Zero   RW          226    .bss.ram_vr         system_bluenrg_lp.o


    Execution Region crash_info_ram_vr_block (Exec base: 0x20000034, Load base: 0x10042308, Size: 0x00000000, Max: 0x00000028, ABSOLUTE, UNINIT)

    **** No section assigned to this execution region ****


    Execution Region BLUE (Exec base: 0x200000c0, Load base: 0x10042308, Size: 0x0000029c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200000c0        -       0x0000029c   Zero   RW          225    .bss.__blue_RAM     system_bluenrg_lp.o


    Execution Region REGION_RAM1 (Exec base: 0x20000360, Load base: 0x10042308, Size: 0x000085fc, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000360   0x10042308   0x00000004   Data   RW          224    .data.SystemCoreClock  system_bluenrg_lp.o
    0x20000364   0x1004230c   0x000000a4   Data   RW          293    .data.os            RTX_CM0.lib(rtx_kernel.o)
    0x20000408        -       0x00008040   Zero   RW           27    .bss.os             rtx_lib.o
    0x20008448        -       0x00000034   Zero   RW           39    .bss.os.msgqueue.cb  rtx_lib.o
    0x2000847c        -       0x00000050   Zero   RW           40    .bss.os.msgqueue.mem  rtx_lib.o
    0x200084cc        -       0x00000088   Zero   RW           36    .bss.os.thread.cb   rtx_lib.o
    0x20008554   0x100423b0   0x00000004   PAD
    0x20008558        -       0x00000200   Zero   RW           37    .bss.os.thread.idle.stack  rtx_lib.o
    0x20008758        -       0x00000200   Zero   RW           38    .bss.os.thread.timer.stack  rtx_lib.o
    0x20008958        -       0x00000001   Zero   RW           41    .bss.os_kernel_is_active.os_kernel_active  rtx_lib.o


    Execution Region ARM_LIB_STACK (Exec base: 0x20007400, Load base: 0x100423b0, Size: 0x00000c00, Max: 0x00000c00, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20007400        -       0x00000c00   Zero   RW            1    ARM_LIB_STACK.bss   anon$$obj.o


    Execution Region REGION_RAM2 (Exec base: 0x2000895c, Load base: 0x100423b0, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE, UNINIT)

    **** No section assigned to this execution region ****

