Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    main_1.o(.text.main) refers to system_bluenrg_lp.o(.text.SystemInit) for SystemInit
    main_1.o(.text.main) refers to rtx_delay.o(.text.osDelay) for osDelay
    main_1.o(.ARM.exidx.text.main) refers to main_1.o(.text.main) for [Anonymous Symbol]
    clock.o(.text.SysCount_Handler) refers to clock.o(.bss.sys_tick_count) for [Anonymous Symbol]
    clock.o(.ARM.exidx.text.SysCount_Handler) refers to clock.o(.text.SysCount_Handler) for [Anonymous Symbol]
    clock.o(.text.Clock_Init) refers to rf_driver_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for LL_RCC_GetSystemClocksFreq
    clock.o(.text.Clock_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    clock.o(.ARM.exidx.text.Clock_Init) refers to clock.o(.text.Clock_Init) for [Anonymous Symbol]
    clock.o(.text.Clock_Time) refers to clock.o(.bss.sys_tick_count) for [Anonymous Symbol]
    clock.o(.ARM.exidx.text.Clock_Time) refers to clock.o(.text.Clock_Time) for [Anonymous Symbol]
    clock.o(.text.Clock_Wait) refers to clock.o(.bss.sys_tick_count) for [Anonymous Symbol]
    clock.o(.ARM.exidx.text.Clock_Wait) refers to clock.o(.text.Clock_Wait) for [Anonymous Symbol]
    fifo.o(.ARM.exidx.text.fifo_init) refers to fifo.o(.text.fifo_init) for [Anonymous Symbol]
    fifo.o(.ARM.exidx.text.fifo_size) refers to fifo.o(.text.fifo_size) for [Anonymous Symbol]
    fifo.o(.ARM.exidx.text.fifo_flush) refers to fifo.o(.text.fifo_flush) for [Anonymous Symbol]
    fifo.o(.text.fifo_put) refers to osal_memcpy.o(.text) for Osal_MemCpy
    fifo.o(.text.fifo_put) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    fifo.o(.ARM.exidx.text.fifo_put) refers to fifo.o(.text.fifo_put) for [Anonymous Symbol]
    fifo.o(.text.fifo_get) refers to osal_memcpy.o(.text) for Osal_MemCpy
    fifo.o(.text.fifo_get) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    fifo.o(.ARM.exidx.text.fifo_get) refers to fifo.o(.text.fifo_get) for [Anonymous Symbol]
    fifo.o(.ARM.exidx.text.fifo_roll_back) refers to fifo.o(.text.fifo_roll_back) for [Anonymous Symbol]
    fifo.o(.text.fifo_put_var_len_item) refers to osal_memcpy.o(.text) for Osal_MemCpy
    fifo.o(.text.fifo_put_var_len_item) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    fifo.o(.ARM.exidx.text.fifo_put_var_len_item) refers to fifo.o(.text.fifo_put_var_len_item) for [Anonymous Symbol]
    fifo.o(.text.fifo_discard) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    fifo.o(.ARM.exidx.text.fifo_discard) refers to fifo.o(.text.fifo_discard) for [Anonymous Symbol]
    fifo.o(.ARM.exidx.text.fifo_get_ptr) refers to fifo.o(.text.fifo_get_ptr) for [Anonymous Symbol]
    fifo.o(.text.fifo_get_var_len_item) refers to osal_memcpy.o(.text) for Osal_MemCpy
    fifo.o(.text.fifo_get_var_len_item) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    fifo.o(.ARM.exidx.text.fifo_get_var_len_item) refers to fifo.o(.text.fifo_get_var_len_item) for [Anonymous Symbol]
    fifo.o(.ARM.exidx.text.fifo_get_ptr_var_len_item) refers to fifo.o(.text.fifo_get_ptr_var_len_item) for [Anonymous Symbol]
    fifo.o(.text.fifo_discard_var_len_item) refers to osal_memcpy.o(.text) for Osal_MemCpy
    fifo.o(.text.fifo_discard_var_len_item) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    fifo.o(.ARM.exidx.text.fifo_discard_var_len_item) refers to fifo.o(.text.fifo_discard_var_len_item) for [Anonymous Symbol]
    gp_timer.o(.text.Timer_Set) refers to clock.o(.text.Clock_Time) for Clock_Time
    gp_timer.o(.ARM.exidx.text.Timer_Set) refers to gp_timer.o(.text.Timer_Set) for [Anonymous Symbol]
    gp_timer.o(.ARM.exidx.text.Timer_Reset) refers to gp_timer.o(.text.Timer_Reset) for [Anonymous Symbol]
    gp_timer.o(.text.Timer_Restart) refers to clock.o(.text.Clock_Time) for Clock_Time
    gp_timer.o(.ARM.exidx.text.Timer_Restart) refers to gp_timer.o(.text.Timer_Restart) for [Anonymous Symbol]
    gp_timer.o(.text.Timer_Expired) refers to clock.o(.text.Clock_Time) for Clock_Time
    gp_timer.o(.ARM.exidx.text.Timer_Expired) refers to gp_timer.o(.text.Timer_Expired) for [Anonymous Symbol]
    gp_timer.o(.text.Timer_Remaining) refers to clock.o(.text.Clock_Time) for Clock_Time
    gp_timer.o(.ARM.exidx.text.Timer_Remaining) refers to gp_timer.o(.text.Timer_Remaining) for [Anonymous Symbol]
    hal_miscutil.o(.ARM.exidx.text.HAL_GetPartInfo) refers to hal_miscutil.o(.text.HAL_GetPartInfo) for [Anonymous Symbol]
    hal_miscutil.o(.text.HAL_GetCrashInfo) refers to hal_miscutil.o(.bss.crash_info_ram_vr) for CrashInfoRam
    hal_miscutil.o(.ARM.exidx.text.HAL_GetCrashInfo) refers to hal_miscutil.o(.text.HAL_GetCrashInfo) for [Anonymous Symbol]
    hal_miscutil.o(.text.HAL_CrashHandler) refers to hal_miscutil.o(.bss.crash_info_ram_vr) for CrashInfoRam
    hal_miscutil.o(.ARM.exidx.text.HAL_CrashHandler) refers to hal_miscutil.o(.text.HAL_CrashHandler) for [Anonymous Symbol]
    hal_miscutil.o(.text.HAL_SetHighPower) refers to hal_miscutil.o(.bss.high_power) for high_power
    hal_miscutil.o(.ARM.exidx.text.HAL_SetHighPower) refers to hal_miscutil.o(.text.HAL_SetHighPower) for [Anonymous Symbol]
    hal_miscutil.o(.text.HAL_RXTX_SEQ_IRQHandler) refers to hal_miscutil.o(.bss.high_power) for high_power
    hal_miscutil.o(.ARM.exidx.text.HAL_RXTX_SEQ_IRQHandler) refers to hal_miscutil.o(.text.HAL_RXTX_SEQ_IRQHandler) for [Anonymous Symbol]
    osal.o(.text.Osal_MemSet) refers to aeabi_memset.o(.text) for __aeabi_memset
    osal.o(.ARM.exidx.text.Osal_MemSet) refers to osal.o(.text.Osal_MemSet) for [Anonymous Symbol]
    osal.o(.text.Osal_MemCmp) refers to memcmp.o(.text) for memcmp
    osal.o(.ARM.exidx.text.Osal_MemCmp) refers to osal.o(.text.Osal_MemCmp) for [Anonymous Symbol]
    context_switch.o(.text) refers to system_bluenrg_lp.o(.bss.ram_vr) for RAM_VR
    rf_driver_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit) refers to rf_driver_ll_rcc.o(.text.LL_RCC_DeInit) for [Anonymous Symbol]
    rf_driver_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    rf_driver_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to rf_driver_ll_rcc.o(.rodata..Lswitch.table.RCC_GetSystemClockFreq) for [Anonymous Symbol]
    rf_driver_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq) refers to rf_driver_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for [Anonymous Symbol]
    rf_driver_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    rf_driver_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to rf_driver_ll_rcc.o(.rodata..Lswitch.table.RCC_GetSystemClockFreq) for [Anonymous Symbol]
    rf_driver_ll_rcc.o(.ARM.exidx.text.RCC_GetSystemClockFreq) refers to rf_driver_ll_rcc.o(.text.RCC_GetSystemClockFreq) for [Anonymous Symbol]
    rf_driver_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSMPSClockFreq) refers to rf_driver_ll_rcc.o(.text.LL_RCC_GetSMPSClockFreq) for [Anonymous Symbol]
    rtx_lib.o(.text._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init) refers to rtx_lib.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for [Anonymous Symbol]
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for [Anonymous Symbol]
    rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace) refers to rtx_lib.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(.text._mutex_initialize) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text._mutex_initialize) refers to rtx_lib.o(.text._mutex_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_acquire) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(.text._mutex_acquire) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for [Anonymous Symbol]
    rtx_lib.o(.ARM.exidx.text._mutex_acquire) refers to rtx_lib.o(.text._mutex_acquire) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_release) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(.text._mutex_release) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for [Anonymous Symbol]
    rtx_lib.o(.ARM.exidx.text._mutex_release) refers to rtx_lib.o(.text._mutex_release) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(.ARM.exidx.text._mutex_free) refers to rtx_lib.o(.text._mutex_free) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv6m.o(.rodata) for irqRtxLib
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.NMI_IRQHandler) refers to startup_bluenrg_lp.o(.text.NMI_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.HardFault_IRQHandler) refers to startup_bluenrg_lp.o(.text.HardFault_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.SVC_IRQHandler) refers to startup_bluenrg_lp.o(.text.SVC_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.PendSV_IRQHandler) refers to startup_bluenrg_lp.o(.text.PendSV_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.SysTick_IRQHandler) refers to startup_bluenrg_lp.o(.text.SysTick_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.FLASH_IRQHandler) refers to startup_bluenrg_lp.o(.text.FLASH_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.RCC_IRQHandler) refers to startup_bluenrg_lp.o(.text.RCC_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.PVD_IRQHandler) refers to startup_bluenrg_lp.o(.text.PVD_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.I2C1_IRQHandler) refers to startup_bluenrg_lp.o(.text.I2C1_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.I2C2_IRQHandler) refers to startup_bluenrg_lp.o(.text.I2C2_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.SPI1_IRQHandler) refers to startup_bluenrg_lp.o(.text.SPI1_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.SPI2_IRQHandler) refers to startup_bluenrg_lp.o(.text.SPI2_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.SPI3_IRQHandler) refers to startup_bluenrg_lp.o(.text.SPI3_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.USART1_IRQHandler) refers to startup_bluenrg_lp.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.LPUART1_IRQHandler) refers to startup_bluenrg_lp.o(.text.LPUART1_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.TIM1_IRQHandler) refers to startup_bluenrg_lp.o(.text.TIM1_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.RTC_IRQHandler) refers to startup_bluenrg_lp.o(.text.RTC_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.ADC_IRQHandler) refers to startup_bluenrg_lp.o(.text.ADC_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.PKA_IRQHandler) refers to startup_bluenrg_lp.o(.text.PKA_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.UPCONV_IRQHandler) refers to startup_bluenrg_lp.o(.text.UPCONV_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.GPIOA_IRQHandler) refers to startup_bluenrg_lp.o(.text.GPIOA_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.GPIOB_IRQHandler) refers to startup_bluenrg_lp.o(.text.GPIOB_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.DMA_IRQHandler) refers to startup_bluenrg_lp.o(.text.DMA_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.BLE_TX_RX_IRQHandler) refers to startup_bluenrg_lp.o(.text.BLE_TX_RX_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.BLE_AES_IRQHandler) refers to startup_bluenrg_lp.o(.text.BLE_AES_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.BLE_ERROR_IRQHandler) refers to startup_bluenrg_lp.o(.text.BLE_ERROR_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.RADIO_CTRL_IRQHandler) refers to startup_bluenrg_lp.o(.text.RADIO_CTRL_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.MR_BLE_IRQHandler) refers to startup_bluenrg_lp.o(.text.MR_BLE_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.CPU_WKUP_IRQHandler) refers to startup_bluenrg_lp.o(.text.CPU_WKUP_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.BLE_WKUP_IRQHandler) refers to startup_bluenrg_lp.o(.text.BLE_WKUP_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.BLE_RXTX_SEQ_IRQHandler) refers to startup_bluenrg_lp.o(.text.BLE_RXTX_SEQ_IRQHandler) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.CS_contextRestore) refers to startup_bluenrg_lp.o(.text.CS_contextRestore) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.text.__low_level_init) refers to context_switch.o(.text) for CS_contextRestore
    startup_bluenrg_lp.o(.text.__low_level_init) refers to system_bluenrg_lp.o(.bss.ram_vr) for RAM_VR
    startup_bluenrg_lp.o(.ARM.exidx.text.__low_level_init) refers to startup_bluenrg_lp.o(.text.__low_level_init) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.text.RESET_HANDLER) refers to __main.o(!!!main) for __main
    startup_bluenrg_lp.o(.text.RESET_HANDLER) refers to context_switch.o(.text) for CS_contextRestore
    startup_bluenrg_lp.o(.text.RESET_HANDLER) refers to system_bluenrg_lp.o(.bss.ram_vr) for RAM_VR
    startup_bluenrg_lp.o(.ARM.exidx.text.RESET_HANDLER) refers to startup_bluenrg_lp.o(.text.RESET_HANDLER) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.ARM.exidx.text.setInterruptPriority) refers to startup_bluenrg_lp.o(.text.setInterruptPriority) for [Anonymous Symbol]
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.RESET_HANDLER) for RESET_HANDLER
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.NMI_IRQHandler) for NMI_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.HardFault_IRQHandler) for HardFault_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.SVC_IRQHandler) for SVC_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.PendSV_IRQHandler) for PendSV_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.SysTick_IRQHandler) for SysTick_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.FLASH_IRQHandler) for FLASH_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.RCC_IRQHandler) for RCC_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.PVD_IRQHandler) for PVD_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.I2C1_IRQHandler) for I2C1_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.I2C2_IRQHandler) for I2C2_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.SPI1_IRQHandler) for SPI1_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.SPI2_IRQHandler) for SPI2_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.SPI3_IRQHandler) for SPI3_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.LPUART1_IRQHandler) for LPUART1_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.TIM1_IRQHandler) for TIM1_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.RTC_IRQHandler) for RTC_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.ADC_IRQHandler) for ADC_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.PKA_IRQHandler) for PKA_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.UPCONV_IRQHandler) for UPCONV_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.GPIOA_IRQHandler) for GPIOA_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.GPIOB_IRQHandler) for GPIOB_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.DMA_IRQHandler) for DMA_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.BLE_TX_RX_IRQHandler) for BLE_TX_RX_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.BLE_AES_IRQHandler) for BLE_AES_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.BLE_ERROR_IRQHandler) for BLE_ERROR_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.RADIO_CTRL_IRQHandler) for RADIO_CTRL_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.MR_BLE_IRQHandler) for MR_BLE_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.CPU_WKUP_IRQHandler) for CPU_WKUP_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.BLE_WKUP_IRQHandler) for BLE_WKUP_IRQHandler
    startup_bluenrg_lp.o(.intvec) refers to startup_bluenrg_lp.o(.text.BLE_RXTX_SEQ_IRQHandler) for BLE_RXTX_SEQ_IRQHandler
    system_bluenrg_lp.o(.text.SystemTimer_TimeoutConfig) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    system_bluenrg_lp.o(.ARM.exidx.text.SystemTimer_TimeoutConfig) refers to system_bluenrg_lp.o(.text.SystemTimer_TimeoutConfig) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.SystemTimer_TimeoutExpired) refers to system_bluenrg_lp.o(.text.SystemTimer_TimeoutExpired) for [Anonymous Symbol]
    system_bluenrg_lp.o(.text.SystemReadyWait) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    system_bluenrg_lp.o(.text.SystemReadyWait) refers to system_bluenrg_lp.o(.data.SystemCoreClock) for SystemCoreClock
    system_bluenrg_lp.o(.ARM.exidx.text.SystemReadyWait) refers to system_bluenrg_lp.o(.text.SystemReadyWait) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.MrBleBiasTrimConfig) refers to system_bluenrg_lp.o(.text.MrBleBiasTrimConfig) for [Anonymous Symbol]
    system_bluenrg_lp.o(.text.SystemCoreClockUpdate) refers to system_bluenrg_lp.o(.data.SystemCoreClock) for SystemCoreClock
    system_bluenrg_lp.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_bluenrg_lp.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_bluenrg_lp.o(.text.SystemClockConfig) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    system_bluenrg_lp.o(.text.SystemClockConfig) refers to system_bluenrg_lp.o(.text.LL_RCC_DIRECT_HSE_Enable) for LL_RCC_DIRECT_HSE_Enable
    system_bluenrg_lp.o(.text.SystemClockConfig) refers to system_bluenrg_lp.o(.data.SystemCoreClock) for SystemCoreClock
    system_bluenrg_lp.o(.ARM.exidx.text.SystemClockConfig) refers to system_bluenrg_lp.o(.text.SystemClockConfig) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_DIRECT_HSE_Enable) refers to system_bluenrg_lp.o(.text.LL_RCC_DIRECT_HSE_Enable) for [Anonymous Symbol]
    system_bluenrg_lp.o(.ARM.exidx.text.RadioClockConfig) refers to system_bluenrg_lp.o(.text.RadioClockConfig) for [Anonymous Symbol]
    system_bluenrg_lp.o(.text.SystemInit) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    system_bluenrg_lp.o(.text.SystemInit) refers to system_bluenrg_lp.o(.text.MrBleBiasTrimConfig) for MrBleBiasTrimConfig
    system_bluenrg_lp.o(.text.SystemInit) refers to system_bluenrg_lp.o(.text.SystemClockConfig) for SystemClockConfig
    system_bluenrg_lp.o(.text.SystemInit) refers to startup_bluenrg_lp.o(.text.setInterruptPriority) for setInterruptPriority
    system_bluenrg_lp.o(.text.SystemInit) refers to startup_bluenrg_lp.o(.intvec) for __vector_table
    system_bluenrg_lp.o(.text.SystemInit) refers to system_bluenrg_lp.o(.data.SystemCoreClock) for SystemCoreClock
    system_bluenrg_lp.o(.text.SystemInit) refers to system_bluenrg_lp.o(.bss.ram_vr) for RAM_VR
    system_bluenrg_lp.o(.ARM.exidx.text.SystemInit) refers to system_bluenrg_lp.o(.text.SystemInit) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv6m.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.GetKernelSleepTime) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime) refers to rtx_kernel.o(.text.GetKernelSleepTime) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    irq_armv6m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv6m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv6m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv6m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv6m.o(.ARM.exidx) refers to irq_armv6m.o(.text) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    os_systick.o(.text.OS_Tick_Setup) refers to system_bluenrg_lp.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_bluenrg_lp.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    aeabi_memset.o(.text) refers to rt_memclr.o(.text) for _memset
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry7.o(.ARM.Collect$$rtentry$$00000007) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main_1.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    __rtentry7.o(.ARM.Collect$$rtentry$$00000007) refers to __rtentry7.o(.ARM.Collect$$rtentry$$00002718) for __lit__00000000
    __rtentry7.o(__vectab_stack_and_reset_2_area) refers to __main.o(!!!main) for __main
    __rtentry7.o(.ARM.exidx) refers to __rtentry7.o(.ARM.Collect$$rtentry$$00000007) for .ARM.Collect$$rtentry$$00000007
    __rtentry7.o(.ARM.exidx) refers to __rtentry7.o(.ARM.Collect$$rtentry$$00002718) for .ARM.Collect$$rtentry$$00002718
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to sys_stackheap.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    sys_stackheap.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_stackheap.o(.text) refers to use_no_semi.o(.text) for __I$use$semihosting
    sys_stackheap_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_stackheap_hlt.o(.text) refers to use_no_semi.o(.text) for __I$use$semihosting
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main_1.o(.text), (0 bytes).
    Removing main_1.o(.ARM.exidx.text.main), (8 bytes).
    Removing main_1.o(.ARM.use_no_argv), (4 bytes).
    Removing clock.o(.text), (0 bytes).
    Removing clock.o(.text.SysCount_Handler), (16 bytes).
    Removing clock.o(.ARM.exidx.text.SysCount_Handler), (8 bytes).
    Removing clock.o(.text.Clock_Init), (72 bytes).
    Removing clock.o(.ARM.exidx.text.Clock_Init), (8 bytes).
    Removing clock.o(.text.Clock_Time), (12 bytes).
    Removing clock.o(.ARM.exidx.text.Clock_Time), (8 bytes).
    Removing clock.o(.text.Clock_Wait), (20 bytes).
    Removing clock.o(.ARM.exidx.text.Clock_Wait), (8 bytes).
    Removing clock.o(.rodata.CLOCK_SECOND), (4 bytes).
    Removing clock.o(.bss.sys_tick_count), (4 bytes).
    Removing fifo.o(.text), (0 bytes).
    Removing fifo.o(.text.fifo_init), (12 bytes).
    Removing fifo.o(.ARM.exidx.text.fifo_init), (8 bytes).
    Removing fifo.o(.text.fifo_size), (24 bytes).
    Removing fifo.o(.ARM.exidx.text.fifo_size), (8 bytes).
    Removing fifo.o(.text.fifo_flush), (6 bytes).
    Removing fifo.o(.ARM.exidx.text.fifo_flush), (8 bytes).
    Removing fifo.o(.text.fifo_put), (88 bytes).
    Removing fifo.o(.ARM.exidx.text.fifo_put), (8 bytes).
    Removing fifo.o(.text.fifo_get), (84 bytes).
    Removing fifo.o(.ARM.exidx.text.fifo_get), (8 bytes).
    Removing fifo.o(.text.fifo_roll_back), (36 bytes).
    Removing fifo.o(.ARM.exidx.text.fifo_roll_back), (8 bytes).
    Removing fifo.o(.text.fifo_put_var_len_item), (148 bytes).
    Removing fifo.o(.ARM.exidx.text.fifo_put_var_len_item), (8 bytes).
    Removing fifo.o(.text.fifo_discard), (64 bytes).
    Removing fifo.o(.ARM.exidx.text.fifo_discard), (8 bytes).
    Removing fifo.o(.text.fifo_get_ptr), (56 bytes).
    Removing fifo.o(.ARM.exidx.text.fifo_get_ptr), (8 bytes).
    Removing fifo.o(.text.fifo_get_var_len_item), (176 bytes).
    Removing fifo.o(.ARM.exidx.text.fifo_get_var_len_item), (8 bytes).
    Removing fifo.o(.text.fifo_get_ptr_var_len_item), (76 bytes).
    Removing fifo.o(.ARM.exidx.text.fifo_get_ptr_var_len_item), (8 bytes).
    Removing fifo.o(.text.fifo_discard_var_len_item), (152 bytes).
    Removing fifo.o(.ARM.exidx.text.fifo_discard_var_len_item), (8 bytes).
    Removing gp_timer.o(.text), (0 bytes).
    Removing gp_timer.o(.text.Timer_Set), (14 bytes).
    Removing gp_timer.o(.ARM.exidx.text.Timer_Set), (8 bytes).
    Removing gp_timer.o(.text.Timer_Reset), (10 bytes).
    Removing gp_timer.o(.ARM.exidx.text.Timer_Reset), (8 bytes).
    Removing gp_timer.o(.text.Timer_Restart), (12 bytes).
    Removing gp_timer.o(.ARM.exidx.text.Timer_Restart), (8 bytes).
    Removing gp_timer.o(.text.Timer_Expired), (26 bytes).
    Removing gp_timer.o(.ARM.exidx.text.Timer_Expired), (8 bytes).
    Removing gp_timer.o(.text.Timer_Remaining), (16 bytes).
    Removing gp_timer.o(.ARM.exidx.text.Timer_Remaining), (8 bytes).
    Removing hal_miscutil.o(.text), (0 bytes).
    Removing hal_miscutil.o(.text.HAL_GetPartInfo), (136 bytes).
    Removing hal_miscutil.o(.ARM.exidx.text.HAL_GetPartInfo), (8 bytes).
    Removing hal_miscutil.o(.text.HAL_GetCrashInfo), (28 bytes).
    Removing hal_miscutil.o(.ARM.exidx.text.HAL_GetCrashInfo), (8 bytes).
    Removing hal_miscutil.o(.text.HAL_CrashHandler), (84 bytes).
    Removing hal_miscutil.o(.ARM.exidx.text.HAL_CrashHandler), (8 bytes).
    Removing hal_miscutil.o(.text.HAL_SetHighPower), (216 bytes).
    Removing hal_miscutil.o(.ARM.exidx.text.HAL_SetHighPower), (8 bytes).
    Removing hal_miscutil.o(.text.HAL_RXTX_SEQ_IRQHandler), (56 bytes).
    Removing hal_miscutil.o(.ARM.exidx.text.HAL_RXTX_SEQ_IRQHandler), (8 bytes).
    Removing hal_miscutil.o(.bss.high_power), (1 bytes).
    Removing hal_miscutil.o(.bss.crash_info_ram_vr), (40 bytes).
    Removing osal.o(.text), (0 bytes).
    Removing osal.o(.text.Osal_MemSet), (14 bytes).
    Removing osal.o(.ARM.exidx.text.Osal_MemSet), (8 bytes).
    Removing osal.o(.text.Osal_MemCmp), (8 bytes).
    Removing osal.o(.ARM.exidx.text.Osal_MemCmp), (8 bytes).
    Removing blue_unit_conversion.o(.text), (68 bytes).
    Removing osal_memcpy.o(.text), (176 bytes).
    Removing rf_driver_ll_rcc.o(.text), (0 bytes).
    Removing rf_driver_ll_rcc.o(.text.LL_RCC_DeInit), (72 bytes).
    Removing rf_driver_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit), (8 bytes).
    Removing rf_driver_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq), (72 bytes).
    Removing rf_driver_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq), (8 bytes).
    Removing rf_driver_ll_rcc.o(.text.RCC_GetSystemClockFreq), (68 bytes).
    Removing rf_driver_ll_rcc.o(.ARM.exidx.text.RCC_GetSystemClockFreq), (8 bytes).
    Removing rf_driver_ll_rcc.o(.text.LL_RCC_GetSMPSClockFreq), (28 bytes).
    Removing rf_driver_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSMPSClockFreq), (8 bytes).
    Removing rf_driver_ll_rcc.o(.rodata..Lswitch.table.RCC_GetSystemClockFreq), (24 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing rtx_lib.o(.text.__user_perthread_libspace), (100 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing rtx_lib.o(.rodata.osRtxUserSVC), (4 bytes).
    Removing rtx_lib.o(.bss.os.libspace), (496 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.text.osRtxIdleThread), (2 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing startup_bluenrg_lp.o(.text), (0 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.NMI_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.HardFault_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.SVC_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.PendSV_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.SysTick_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.FLASH_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.RCC_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.PVD_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.I2C1_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.I2C2_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.SPI1_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.SPI2_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.SPI3_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.LPUART1_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.TIM1_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.RTC_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.ADC_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.PKA_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.UPCONV_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.GPIOA_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.GPIOB_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.DMA_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.BLE_TX_RX_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.BLE_AES_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.BLE_ERROR_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.RADIO_CTRL_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.MR_BLE_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.CPU_WKUP_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.BLE_WKUP_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.BLE_RXTX_SEQ_IRQHandler), (8 bytes).
    Removing startup_bluenrg_lp.o(.text.CS_contextRestore), (2 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.CS_contextRestore), (8 bytes).
    Removing startup_bluenrg_lp.o(.text.__low_level_init), (76 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.__low_level_init), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.RESET_HANDLER), (8 bytes).
    Removing startup_bluenrg_lp.o(.ARM.exidx.text.setInterruptPriority), (8 bytes).
    Removing system_bluenrg_lp.o(.text), (0 bytes).
    Removing system_bluenrg_lp.o(.text.SystemTimer_TimeoutConfig), (48 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.SystemTimer_TimeoutConfig), (8 bytes).
    Removing system_bluenrg_lp.o(.text.SystemTimer_TimeoutExpired), (16 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.SystemTimer_TimeoutExpired), (8 bytes).
    Removing system_bluenrg_lp.o(.text.SystemReadyWait), (76 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.SystemReadyWait), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.MrBleBiasTrimConfig), (8 bytes).
    Removing system_bluenrg_lp.o(.text.SystemCoreClockUpdate), (60 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.SystemClockConfig), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.LL_RCC_DIRECT_HSE_Enable), (8 bytes).
    Removing system_bluenrg_lp.o(.text.RadioClockConfig), (152 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.RadioClockConfig), (8 bytes).
    Removing system_bluenrg_lp.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (56 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelStart), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelStart), (132 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (60 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.GetKernelSleepTime), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (128 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDelayTick), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadSwitch), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadStartup), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadNew), (508 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadNew), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.text.osThreadExit), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadPostProcess), (38 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.text.ThreadFlagsCheck), (74 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (18 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (18 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (70 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (132 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (54 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (58 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadFree), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadExit), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadJoinWakeup), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDestroy), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (152 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (96 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (104 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (40 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (32 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (132 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (18 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (42 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.text.osRtxMutexOwnerRelease), (68 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osRtxMutexOwnerRestore), (70 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (18 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (24 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing irq_armv6m.o(.text), (164 bytes).
    Removing irq_armv6m.o(.rodata), (1 bytes).
    Removing irq_armv6m.o(.ARM.exidx), (24 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (432 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (64 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (112 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (160 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (112 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.text.osRtxTick_Handler), (128 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.text.osRtxPendSV_Handler), (132 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.text.OS_Tick_Setup), (76 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Enable), (44 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (40 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_AcknowledgeIRQ), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetIRQn), (6 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing os_systick.o(.bss.os), (1 bytes).

491 unused section(s) (total 13117 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry7.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_hlt.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  aeabi_memset.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  memcmp.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    clock.c                                  0x00000000   Number         0  clock.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    fifo.c                                   0x00000000   Number         0  fifo.o ABSOLUTE
    gp_timer.c                               0x00000000   Number         0  gp_timer.o ABSOLUTE
    hal\Src\blue_unit_conversion.s           0x00000000   Number         0  blue_unit_conversion.o ABSOLUTE
    hal\Src\context_switch.s                 0x00000000   Number         0  context_switch.o ABSOLUTE
    hal\Src\osal_memcpy.s                    0x00000000   Number         0  osal_memcpy.o ABSOLUTE
    hal_miscutil.c                           0x00000000   Number         0  hal_miscutil.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main_1.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    osal.c                                   0x00000000   Number         0  osal.o ABSOLUTE
    rf_driver_ll_rcc.c                       0x00000000   Number         0  rf_driver_ll_rcc.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    startup_BlueNRG_LP.c                     0x00000000   Number         0  startup_bluenrg_lp.o ABSOLUTE
    system_BlueNRG_LP.c                      0x00000000   Number         0  system_bluenrg_lp.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv6m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv6m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv6m.o ABSOLUTE
    __tagsym$$used.0                         0x10040000   Number         0  startup_bluenrg_lp.o(.intvec)
    !!!main                                  0x100400c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x100400c8   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x10040104   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x10040120   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x1004013c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x1004013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x1004013e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x10040140   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x10040142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x10040142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x10040142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x10040142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x10040142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x10040142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x10040142   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x10040144   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x10040144   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000007          0x10040144   Section        4  __rtentry7.o(.ARM.Collect$$rtentry$$00000007)
    .ARM.Collect$$rtentry$$00000008          0x10040148   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x10040150   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x10040154   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x10040154   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __lit__00000000                          0x1004015c   Data           4  __rtentry7.o(.ARM.Collect$$rtentry$$00002718)
    .ARM.Collect$$rtentry$$00002718          0x1004015c   Section        4  __rtentry7.o(.ARM.Collect$$rtentry$$00002718)
    .ARM.Collect$$rtexit$$00000000           0x10040160   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x10040162   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x10040162   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x10040166   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x1004016c   Section       56  rt_memcpy.o(.emb_text)
    .text                                    0x100401a4   Section      104  context_switch.o(.text)
    .text                                    0x1004020c   Section        0  rt_memcpy.o(.text)
    .text                                    0x1004028e   Section        0  rt_memclr.o(.text)
    .text                                    0x100402ce   Section        0  exit.o(.text)
    .text                                    0x100402e0   Section        0  sys_exit.o(.text)
    .text                                    0x100402ec   Section        2  use_no_semi.o(.text)
    [Anonymous Symbol]                       0x100402ee   Section        0  startup_bluenrg_lp.o(.text.ADC_IRQHandler)
    .text                                    0x100402ee   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x100402f0   Section        0  startup_bluenrg_lp.o(.text.BLE_AES_IRQHandler)
    [Anonymous Symbol]                       0x100402f2   Section        0  startup_bluenrg_lp.o(.text.BLE_ERROR_IRQHandler)
    [Anonymous Symbol]                       0x100402f4   Section        0  startup_bluenrg_lp.o(.text.BLE_RXTX_SEQ_IRQHandler)
    [Anonymous Symbol]                       0x100402f6   Section        0  startup_bluenrg_lp.o(.text.BLE_TX_RX_IRQHandler)
    [Anonymous Symbol]                       0x100402f8   Section        0  startup_bluenrg_lp.o(.text.BLE_WKUP_IRQHandler)
    [Anonymous Symbol]                       0x100402fa   Section        0  startup_bluenrg_lp.o(.text.CPU_WKUP_IRQHandler)
    [Anonymous Symbol]                       0x100402fc   Section        0  startup_bluenrg_lp.o(.text.DMA_IRQHandler)
    [Anonymous Symbol]                       0x100402fe   Section        0  startup_bluenrg_lp.o(.text.FLASH_IRQHandler)
    [Anonymous Symbol]                       0x10040300   Section        0  startup_bluenrg_lp.o(.text.GPIOA_IRQHandler)
    [Anonymous Symbol]                       0x10040302   Section        0  startup_bluenrg_lp.o(.text.GPIOB_IRQHandler)
    [Anonymous Symbol]                       0x10040304   Section        0  startup_bluenrg_lp.o(.text.HardFault_IRQHandler)
    [Anonymous Symbol]                       0x10040306   Section        0  startup_bluenrg_lp.o(.text.I2C1_IRQHandler)
    [Anonymous Symbol]                       0x10040308   Section        0  startup_bluenrg_lp.o(.text.I2C2_IRQHandler)
    LL_RCC_DIRECT_HSE_Enable                 0x1004030d   Thumb Code    60  system_bluenrg_lp.o(.text.LL_RCC_DIRECT_HSE_Enable)
    [Anonymous Symbol]                       0x1004030c   Section        0  system_bluenrg_lp.o(.text.LL_RCC_DIRECT_HSE_Enable)
    __arm_cp.6_0                             0x10040348   Number         4  system_bluenrg_lp.o(.text.LL_RCC_DIRECT_HSE_Enable)
    [Anonymous Symbol]                       0x1004034c   Section        0  startup_bluenrg_lp.o(.text.LPUART1_IRQHandler)
    [Anonymous Symbol]                       0x1004034e   Section        0  startup_bluenrg_lp.o(.text.MR_BLE_IRQHandler)
    MessageQueueGet                          0x10040351   Thumb Code    66  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x10040350   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x10040393   Thumb Code    94  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x10040392   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x100403f1   Thumb Code    30  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x100403f0   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x10040410   Section        0  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_0                             0x100405d8   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_1                             0x100405dc   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_2                             0x100405e0   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_3                             0x100405e4   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_4                             0x100405e8   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    __arm_cp.3_5                             0x100405ec   Number         4  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    [Anonymous Symbol]                       0x100405f0   Section        0  startup_bluenrg_lp.o(.text.NMI_IRQHandler)
    [Anonymous Symbol]                       0x100405f2   Section        0  startup_bluenrg_lp.o(.text.PKA_IRQHandler)
    [Anonymous Symbol]                       0x100405f4   Section        0  startup_bluenrg_lp.o(.text.PVD_IRQHandler)
    [Anonymous Symbol]                       0x100405f6   Section        0  startup_bluenrg_lp.o(.text.PendSV_IRQHandler)
    [Anonymous Symbol]                       0x100405f8   Section        0  startup_bluenrg_lp.o(.text.RADIO_CTRL_IRQHandler)
    [Anonymous Symbol]                       0x100405fa   Section        0  startup_bluenrg_lp.o(.text.RCC_IRQHandler)
    [Anonymous Symbol]                       0x100405fc   Section        0  startup_bluenrg_lp.o(.text.RESET_HANDLER)
    __arm_cp.33_0                            0x10040634   Number         4  startup_bluenrg_lp.o(.text.RESET_HANDLER)
    __arm_cp.33_1                            0x10040638   Number         4  startup_bluenrg_lp.o(.text.RESET_HANDLER)
    __arm_cp.33_2                            0x1004063c   Number         4  startup_bluenrg_lp.o(.text.RESET_HANDLER)
    __arm_cp.33_3                            0x10040640   Number         4  startup_bluenrg_lp.o(.text.RESET_HANDLER)
    __arm_cp.33_4                            0x10040644   Number         4  startup_bluenrg_lp.o(.text.RESET_HANDLER)
    [Anonymous Symbol]                       0x10040648   Section        0  startup_bluenrg_lp.o(.text.RTC_IRQHandler)
    [Anonymous Symbol]                       0x1004064a   Section        0  startup_bluenrg_lp.o(.text.SPI1_IRQHandler)
    [Anonymous Symbol]                       0x1004064c   Section        0  startup_bluenrg_lp.o(.text.SPI2_IRQHandler)
    [Anonymous Symbol]                       0x1004064e   Section        0  startup_bluenrg_lp.o(.text.SPI3_IRQHandler)
    [Anonymous Symbol]                       0x10040650   Section        0  startup_bluenrg_lp.o(.text.SVC_IRQHandler)
    [Anonymous Symbol]                       0x10040652   Section        0  startup_bluenrg_lp.o(.text.SysTick_IRQHandler)
    [Anonymous Symbol]                       0x10040654   Section        0  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.5_0                             0x1004081c   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.5_1                             0x10040820   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.5_2                             0x10040824   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.5_3                             0x10040828   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.5_4                             0x1004082c   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.5_5                             0x10040830   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.5_6                             0x10040834   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.5_7                             0x10040838   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.5_8                             0x1004083c   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.5_9                             0x10040840   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    __arm_cp.5_10                            0x10040844   Number         4  system_bluenrg_lp.o(.text.SystemClockConfig)
    [Anonymous Symbol]                       0x10040848   Section        0  system_bluenrg_lp.o(.text.SystemInit)
    __arm_cp.8_0                             0x10040b6c   Number         4  system_bluenrg_lp.o(.text.SystemInit)
    __arm_cp.8_1                             0x10040b70   Number         4  system_bluenrg_lp.o(.text.SystemInit)
    __arm_cp.8_2                             0x10040b74   Number         4  system_bluenrg_lp.o(.text.SystemInit)
    __arm_cp.8_3                             0x10040b78   Number         4  system_bluenrg_lp.o(.text.SystemInit)
    __arm_cp.8_4                             0x10040b7c   Number         4  system_bluenrg_lp.o(.text.SystemInit)
    __arm_cp.8_5                             0x10040b80   Number         4  system_bluenrg_lp.o(.text.SystemInit)
    __arm_cp.8_6                             0x10040b84   Number         4  system_bluenrg_lp.o(.text.SystemInit)
    __arm_cp.8_7                             0x10040b88   Number         4  system_bluenrg_lp.o(.text.SystemInit)
    __arm_cp.8_8                             0x10040b8c   Number         4  system_bluenrg_lp.o(.text.SystemInit)
    __arm_cp.8_9                             0x10040b90   Number         4  system_bluenrg_lp.o(.text.SystemInit)
    __arm_cp.8_10                            0x10040b94   Number         4  system_bluenrg_lp.o(.text.SystemInit)
    __arm_cp.8_11                            0x10040b98   Number         4  system_bluenrg_lp.o(.text.SystemInit)
    __arm_cp.8_12                            0x10040b9c   Number         4  system_bluenrg_lp.o(.text.SystemInit)
    __arm_cp.8_13                            0x10040ba0   Number         4  system_bluenrg_lp.o(.text.SystemInit)
    [Anonymous Symbol]                       0x10040ba4   Section        0  startup_bluenrg_lp.o(.text.TIM1_IRQHandler)
    TimerInsert                              0x10040ba9   Thumb Code    72  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x10040ba8   Section        0  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x10040bf0   Section        0  startup_bluenrg_lp.o(.text.UPCONV_IRQHandler)
    [Anonymous Symbol]                       0x10040bf2   Section        0  startup_bluenrg_lp.o(.text.USART1_IRQHandler)
    __tagsym$$used.1                         0x10040bf4   Number         0  rtx_lib.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x10040bf4   Section        0  rtx_lib.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x10040c20   Number         0  rtx_lib.o(.text._mutex_free)
    [Anonymous Symbol]                       0x10040c20   Section        0  rtx_lib.o(.text._mutex_free)
    __tagsym$$used.0                         0x10040c2a   Number         0  rtx_lib.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x10040c2a   Section        0  rtx_lib.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x10040c4c   Number         0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x10040c4c   Section        0  rtx_lib.o(.text._mutex_release)
    __arm_cp.4_0                             0x10040c74   Number         4  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x10040c78   Section        0  rtx_lib.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x10040c80   Section        0  main_1.o(.text.main)
    [Anonymous Symbol]                       0x10040c94   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x10040cb8   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x10040cbc   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_0                             0x10040ce4   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_1                             0x10040ce8   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x10040cec   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.2_0                             0x10040d10   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x10040d14   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.5_0                             0x10040d84   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x10040d88   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.4_0                             0x10040df8   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x10040dfc   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.4_0                             0x10040e20   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x10040e24   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.7_0                             0x10040e48   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x10040e4c   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.2_0                             0x10040e6c   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x10040e70   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.5_0                             0x10040e94   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x10040e98   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    [Anonymous Symbol]                       0x10040e9a   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x10040ea2   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x10040ea4   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x10040f1c   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x10040f6a   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x10040f98   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x10040fc2   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x10040ff8   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x10041035   Thumb Code   188  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x10041034   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x100410f0   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    __arm_cp.0_0                             0x10041110   Number         4  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    [Anonymous Symbol]                       0x10041114   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x1004117c   Number         4  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadBlock                         0x10041181   Thumb Code    52  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x10041180   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x100411b5   Thumb Code   140  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x100411b4   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayRemove                   0x10041241   Thumb Code    68  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x10041240   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x10041284   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x100412d0   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x100412e4   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x10041310   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x10041328   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x1004134c   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x10041360   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x10041368   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x100413a4   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x100413c8   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_1                             0x100413e4   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x100413e8   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x10041405   Thumb Code   112  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x10041404   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x10041474   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x10041478   Section        0  startup_bluenrg_lp.o(.text.setInterruptPriority)
    __arm_cp.34_0                            0x10041594   Number         4  startup_bluenrg_lp.o(.text.setInterruptPriority)
    __arm_cp.34_1                            0x10041598   Number         4  startup_bluenrg_lp.o(.text.setInterruptPriority)
    __arm_cp.34_2                            0x1004159c   Number         4  startup_bluenrg_lp.o(.text.setInterruptPriority)
    __arm_cp.34_3                            0x100415a0   Number         4  startup_bluenrg_lp.o(.text.setInterruptPriority)
    svcRtxDelay                              0x100415a5   Thumb Code    24  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x100415a4   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxKernelGetState                     0x100415bd   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x100415bc   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.6_0                             0x100415c4   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelInitialize                   0x100415c9   Thumb Code   308  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x100415c8   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_0                            0x100416fc   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_1                            0x10041700   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_2                            0x10041704   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxMessageQueueGet                    0x10041709   Thumb Code   200  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x10041708   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.22_0                            0x100417d0   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x100417d5   Thumb Code   428  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x100417d4   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_0                             0x10041980   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_1                             0x10041984   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_2                             0x10041988   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_3                             0x1004198c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_4                             0x10041990   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_5                             0x10041994   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x10041999   Thumb Code   172  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x10041998   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x10041a45   Thumb Code   148  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x10041a44   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x10041ad9   Thumb Code   176  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x10041ad8   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.13_0                            0x10041b88   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x10041b8d   Thumb Code   108  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x10041b8c   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.8_0                             0x10041bf8   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x10041bfd   Thumb Code   184  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x10041bfc   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.11_0                            0x10041cb4   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    .text_divfast                            0x10041cb8   Section      502  aeabi_sdivfast.o(.text_divfast)
    __tagsym$$used.4                         0x10041eb0   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.5                         0x10041f20   Number         0  rtx_lib.o(.rodata)
    os_idle_thread_attr                      0x10041f58   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x10041f58   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x10041f7c   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x10041f7c   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x10041f94   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x10041f94   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x10041fb8   Section        0  rtx_kernel.o(.rodata.str1.4)
    __tagsym$$used.1                         0x20000004   Number         0  system_bluenrg_lp.o(.bss.ram_vr)
    __tagsym$$used.0                         0x200000c0   Number         0  system_bluenrg_lp.o(.bss.__blue_RAM)
    os_isr_queue                             0x20000408   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x20000408   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x20000448   Data       32768  rtx_lib.o(.bss.os)
    os_timer_mq_cb                           0x20008448   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x20008448   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x2000847c   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x2000847c   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x200084cc   Data          68  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x200084cc   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20008510   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x20008558   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x20008558   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x20008758   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x20008758   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    os_kernel_is_active.os_kernel_active     0x20008958   Data           1  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x20008958   Section        0  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    Image$$ZI$$Limit                          - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __vector_table                           0x10040000   Data         192  startup_bluenrg_lp.o(.intvec)
    __main                                   0x100400c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x100400c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x100400c9   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x100400c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x100400d9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x10040105   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x10040121   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x1004013d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_1                       0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x1004013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x10040141   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x10040143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x10040143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x10040143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x10040143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x10040143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x10040143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x10040143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x10040145   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x10040145   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x10040145   Thumb Code     0  __rtentry7.o(.ARM.Collect$$rtentry$$00000007)
    __rt_entry_postsh_1                      0x10040149   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x10040151   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x10040155   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x10040155   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x10040161   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x10040163   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x10040163   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x10040167   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy4                          0x1004016d   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x1004016d   Thumb Code     0  rt_memcpy.o(.emb_text)
    CS_contextSave                           0x100401a5   Thumb Code    52  context_switch.o(.text)
    CS_contextRestore                        0x100401d9   Thumb Code    42  context_switch.o(.text)
    __aeabi_memcpy                           0x1004020d   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x1004020d   Thumb Code     0  rt_memcpy.o(.text)
    _memset_w                                0x1004028f   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x100402a9   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x100402c7   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x100402c7   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x100402cb   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x100402cb   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x100402cb   Thumb Code     4  rt_memclr.o(.text)
    exit                                     0x100402cf   Thumb Code    16  exit.o(.text)
    _sys_exit                                0x100402e1   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x100402ed   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x100402ed   Thumb Code     2  use_no_semi.o(.text)
    ADC_IRQHandler                           0x100402ef   Thumb Code     2  startup_bluenrg_lp.o(.text.ADC_IRQHandler)
    __semihosting_library_function           0x100402ef   Thumb Code     0  indicate_semi.o(.text)
    BLE_AES_IRQHandler                       0x100402f1   Thumb Code     2  startup_bluenrg_lp.o(.text.BLE_AES_IRQHandler)
    BLE_ERROR_IRQHandler                     0x100402f3   Thumb Code     2  startup_bluenrg_lp.o(.text.BLE_ERROR_IRQHandler)
    BLE_RXTX_SEQ_IRQHandler                  0x100402f5   Thumb Code     2  startup_bluenrg_lp.o(.text.BLE_RXTX_SEQ_IRQHandler)
    BLE_TX_RX_IRQHandler                     0x100402f7   Thumb Code     2  startup_bluenrg_lp.o(.text.BLE_TX_RX_IRQHandler)
    BLE_WKUP_IRQHandler                      0x100402f9   Thumb Code     2  startup_bluenrg_lp.o(.text.BLE_WKUP_IRQHandler)
    CPU_WKUP_IRQHandler                      0x100402fb   Thumb Code     2  startup_bluenrg_lp.o(.text.CPU_WKUP_IRQHandler)
    DMA_IRQHandler                           0x100402fd   Thumb Code     2  startup_bluenrg_lp.o(.text.DMA_IRQHandler)
    FLASH_IRQHandler                         0x100402ff   Thumb Code     2  startup_bluenrg_lp.o(.text.FLASH_IRQHandler)
    GPIOA_IRQHandler                         0x10040301   Thumb Code     2  startup_bluenrg_lp.o(.text.GPIOA_IRQHandler)
    GPIOB_IRQHandler                         0x10040303   Thumb Code     2  startup_bluenrg_lp.o(.text.GPIOB_IRQHandler)
    HardFault_IRQHandler                     0x10040305   Thumb Code     2  startup_bluenrg_lp.o(.text.HardFault_IRQHandler)
    I2C1_IRQHandler                          0x10040307   Thumb Code     2  startup_bluenrg_lp.o(.text.I2C1_IRQHandler)
    I2C2_IRQHandler                          0x10040309   Thumb Code     2  startup_bluenrg_lp.o(.text.I2C2_IRQHandler)
    LPUART1_IRQHandler                       0x1004034d   Thumb Code     2  startup_bluenrg_lp.o(.text.LPUART1_IRQHandler)
    MR_BLE_IRQHandler                        0x1004034f   Thumb Code     2  startup_bluenrg_lp.o(.text.MR_BLE_IRQHandler)
    MrBleBiasTrimConfig                      0x10040411   Thumb Code   456  system_bluenrg_lp.o(.text.MrBleBiasTrimConfig)
    NMI_IRQHandler                           0x100405f1   Thumb Code     2  startup_bluenrg_lp.o(.text.NMI_IRQHandler)
    PKA_IRQHandler                           0x100405f3   Thumb Code     2  startup_bluenrg_lp.o(.text.PKA_IRQHandler)
    PVD_IRQHandler                           0x100405f5   Thumb Code     2  startup_bluenrg_lp.o(.text.PVD_IRQHandler)
    PendSV_IRQHandler                        0x100405f7   Thumb Code     2  startup_bluenrg_lp.o(.text.PendSV_IRQHandler)
    RADIO_CTRL_IRQHandler                    0x100405f9   Thumb Code     2  startup_bluenrg_lp.o(.text.RADIO_CTRL_IRQHandler)
    RCC_IRQHandler                           0x100405fb   Thumb Code     2  startup_bluenrg_lp.o(.text.RCC_IRQHandler)
    RESET_HANDLER                            0x100405fd   Thumb Code    56  startup_bluenrg_lp.o(.text.RESET_HANDLER)
    RTC_IRQHandler                           0x10040649   Thumb Code     2  startup_bluenrg_lp.o(.text.RTC_IRQHandler)
    SPI1_IRQHandler                          0x1004064b   Thumb Code     2  startup_bluenrg_lp.o(.text.SPI1_IRQHandler)
    SPI2_IRQHandler                          0x1004064d   Thumb Code     2  startup_bluenrg_lp.o(.text.SPI2_IRQHandler)
    SPI3_IRQHandler                          0x1004064f   Thumb Code     2  startup_bluenrg_lp.o(.text.SPI3_IRQHandler)
    SVC_IRQHandler                           0x10040651   Thumb Code     2  startup_bluenrg_lp.o(.text.SVC_IRQHandler)
    SysTick_IRQHandler                       0x10040653   Thumb Code     2  startup_bluenrg_lp.o(.text.SysTick_IRQHandler)
    SystemClockConfig                        0x10040655   Thumb Code   456  system_bluenrg_lp.o(.text.SystemClockConfig)
    SystemInit                               0x10040849   Thumb Code   804  system_bluenrg_lp.o(.text.SystemInit)
    TIM1_IRQHandler                          0x10040ba5   Thumb Code     2  startup_bluenrg_lp.o(.text.TIM1_IRQHandler)
    UPCONV_IRQHandler                        0x10040bf1   Thumb Code     2  startup_bluenrg_lp.o(.text.UPCONV_IRQHandler)
    USART1_IRQHandler                        0x10040bf3   Thumb Code     2  startup_bluenrg_lp.o(.text.USART1_IRQHandler)
    _mutex_acquire                           0x10040bf5   Thumb Code    44  rtx_lib.o(.text._mutex_acquire)
    _mutex_free                              0x10040c21   Thumb Code    10  rtx_lib.o(.text._mutex_free)
    _mutex_initialize                        0x10040c2b   Thumb Code    34  rtx_lib.o(.text._mutex_initialize)
    _mutex_release                           0x10040c4d   Thumb Code    40  rtx_lib.o(.text._mutex_release)
    _platform_post_stackheap_init            0x10040c79   Thumb Code     8  rtx_lib.o(.text._platform_post_stackheap_init)
    main                                     0x10040c81   Thumb Code    18  main_1.o(.text.main)
    osDelay                                  0x10040c95   Thumb Code    36  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x10040cbd   Thumb Code    40  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x10040ced   Thumb Code    36  rtx_kernel.o(.text.osKernelInitialize)
    osMessageQueueGet                        0x10040d15   Thumb Code   112  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueuePut                        0x10040d89   Thumb Code   112  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x10040dfd   Thumb Code    36  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x10040e25   Thumb Code    36  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x10040e4d   Thumb Code    32  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x10040e71   Thumb Code    36  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x10040e99   Thumb Code     2  rtx_config.o(.text.osRtxErrorNotify)
    osRtxKernelErrorNotify                   0x10040e9b   Thumb Code     8  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelPreInit                       0x10040ea3   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x10040ea5   Thumb Code   120  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x10040f1d   Thumb Code    78  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x10040f6b   Thumb Code    46  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x10040f99   Thumb Code    42  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x10040fc3   Thumb Code    54  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x10040ff9   Thumb Code    60  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x100410f1   Thumb Code    32  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxPostProcess                         0x10041115   Thumb Code   104  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDispatch                      0x10041285   Thumb Code    76  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x100412d1   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x100412e5   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x10041311   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x10041329   Thumb Code    36  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x1004134d   Thumb Code    20  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x10041361   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadWaitEnter                     0x10041369   Thumb Code    60  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x100413a5   Thumb Code    34  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTimerSetup                          0x100413c9   Thumb Code    28  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x100413e9   Thumb Code    28  rtx_timer.o(.text.osRtxTimerThread)
    setInterruptPriority                     0x10041479   Thumb Code   284  startup_bluenrg_lp.o(.text.setInterruptPriority)
    __aeabi_uidiv                            0x10041cb9   Thumb Code    68  aeabi_sdivfast.o(.text_divfast)
    __aeabi_idiv                             0x10041cfd   Thumb Code   434  aeabi_sdivfast.o(.text_divfast)
    osRtxConfig                              0x10041eb0   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x10041f20   Data          56  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x10041fc4   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x10041ff4   Number         0  anon$$obj.o(Region$$Table)
    RAM_VR                                   0x20000004   Data          44  system_bluenrg_lp.o(.bss.ram_vr)
    __blue_RAM                               0x200000c0   Data         668  system_bluenrg_lp.o(.bss.__blue_RAM)
    SystemCoreClock                          0x20000360   Data           4  system_bluenrg_lp.o(.data.SystemCoreClock)
    osRtxInfo                                0x20000364   Data         164  rtx_kernel.o(.data.os)
    .bss.os.msgqueue.cb$$Base                0x20008448   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x2000847c   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200084cc   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x20008554   Number         0  rtx_lib.o(.bss.os.thread.cb)
    Image$$ARM_LIB_STACK$$ZI$$Limit          0x20010000   Number         0  anon$$obj.o ABSOLUTE



==============================================================================

Memory Map of the image

  Image Entry point : 0x100400c1

  Load Region LR_IROM2 (Base: 0x10040000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Execution Region REGION_FLASH_BOOTLOADER (Exec base: 0x10040000, Load base: 0x10040000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    **** No section assigned to this execution region ****



  Load Region LR_IROM1 (Base: 0x10040000, Size: 0x000020a0, Max: 0x00040000, ABSOLUTE)

    Execution Region REGION_FLASH (Exec base: 0x10040000, Load base: 0x10040000, Size: 0x00001ff4, Max: 0x0003f000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x10040000   0x10040000   0x000000c0   Data   RO          259    .intvec             startup_bluenrg_lp.o
    0x100400c0   0x100400c0   0x00000008   Code   RO          783  * !!!main             c_p.l(__main.o)
    0x100400c8   0x100400c8   0x0000003c   Code   RO          967    !!!scatter          c_p.l(__scatter.o)
    0x10040104   0x10040104   0x0000001a   Code   RO          969    !!handler_copy      c_p.l(__scatter_copy.o)
    0x1004011e   0x1004011e   0x00000002   PAD
    0x10040120   0x10040120   0x0000001c   Code   RO          971    !!handler_zi        c_p.l(__scatter_zi.o)
    0x1004013c   0x1004013c   0x00000002   Code   RO          824    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          842    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          844    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          846    .ARM.Collect$$libinit$$00000006  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          849    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          851    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          853    .ARM.Collect$$libinit$$00000010  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          856    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          858    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          860    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          862    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          864    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          866    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          868    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          870    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          872    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          874    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          876    .ARM.Collect$$libinit$$00000027  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          880    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          882    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          884    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000000   Code   RO          886    .ARM.Collect$$libinit$$00000034  c_p.l(libinit2.o)
    0x1004013e   0x1004013e   0x00000002   Code   RO          887    .ARM.Collect$$libinit$$00000035  c_p.l(libinit2.o)
    0x10040140   0x10040140   0x00000002   Code   RO          922    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x10040142   0x10040142   0x00000000   Code   RO          950    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x10040142   0x10040142   0x00000000   Code   RO          952    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x10040142   0x10040142   0x00000000   Code   RO          955    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x10040142   0x10040142   0x00000000   Code   RO          958    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x10040142   0x10040142   0x00000000   Code   RO          960    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x10040142   0x10040142   0x00000000   Code   RO          963    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x10040142   0x10040142   0x00000002   Code   RO          964    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x10040144   0x10040144   0x00000000   Code   RO          785    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x10040144   0x10040144   0x00000000   Code   RO          791    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x10040144   0x10040144   0x00000004   Code   RO          805    .ARM.Collect$$rtentry$$00000007  c_p.l(__rtentry7.o)
    0x10040148   0x10040148   0x00000008   Code   RO          792    .ARM.Collect$$rtentry$$00000008  c_p.l(__rtentry2.o)
    0x10040150   0x10040150   0x00000004   Code   RO          794    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x10040154   0x10040154   0x00000000   Code   RO          796    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x10040154   0x10040154   0x00000008   Code   RO          797    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x1004015c   0x1004015c   0x00000004   Code   RO          806    .ARM.Collect$$rtentry$$00002718  c_p.l(__rtentry7.o)
    0x10040160   0x10040160   0x00000002   Code   RO          833    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x10040162   0x10040162   0x00000000   Code   RO          896    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x10040162   0x10040162   0x00000004   Code   RO          897    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x10040166   0x10040166   0x00000006   Code   RO          898    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x1004016c   0x1004016c   0x00000038   Code   RO          767    .emb_text           c_p.l(rt_memcpy.o)
    0x100401a4   0x100401a4   0x00000068   Code   RO          117    .text               context_switch.o
    0x1004020c   0x1004020c   0x00000082   Code   RO          768    .text               c_p.l(rt_memcpy.o)
    0x1004028e   0x1004028e   0x00000040   Code   RO          773    .text               c_p.l(rt_memclr.o)
    0x100402ce   0x100402ce   0x00000010   Code   RO          815    .text               c_p.l(exit.o)
    0x100402de   0x100402de   0x00000002   PAD
    0x100402e0   0x100402e0   0x0000000c   Code   RO          888    .text               c_p.l(sys_exit.o)
    0x100402ec   0x100402ec   0x00000002   Code   RO          892    .text               c_p.l(use_no_semi.o)
    0x100402ee   0x100402ee   0x00000000   Code   RO          894    .text               c_p.l(indicate_semi.o)
    0x100402ee   0x100402ee   0x00000002   Code   RO          223    .text.ADC_IRQHandler  startup_bluenrg_lp.o
    0x100402f0   0x100402f0   0x00000002   Code   RO          237    .text.BLE_AES_IRQHandler  startup_bluenrg_lp.o
    0x100402f2   0x100402f2   0x00000002   Code   RO          239    .text.BLE_ERROR_IRQHandler  startup_bluenrg_lp.o
    0x100402f4   0x100402f4   0x00000002   Code   RO          249    .text.BLE_RXTX_SEQ_IRQHandler  startup_bluenrg_lp.o
    0x100402f6   0x100402f6   0x00000002   Code   RO          235    .text.BLE_TX_RX_IRQHandler  startup_bluenrg_lp.o
    0x100402f8   0x100402f8   0x00000002   Code   RO          247    .text.BLE_WKUP_IRQHandler  startup_bluenrg_lp.o
    0x100402fa   0x100402fa   0x00000002   Code   RO          245    .text.CPU_WKUP_IRQHandler  startup_bluenrg_lp.o
    0x100402fc   0x100402fc   0x00000002   Code   RO          233    .text.DMA_IRQHandler  startup_bluenrg_lp.o
    0x100402fe   0x100402fe   0x00000002   Code   RO          199    .text.FLASH_IRQHandler  startup_bluenrg_lp.o
    0x10040300   0x10040300   0x00000002   Code   RO          229    .text.GPIOA_IRQHandler  startup_bluenrg_lp.o
    0x10040302   0x10040302   0x00000002   Code   RO          231    .text.GPIOB_IRQHandler  startup_bluenrg_lp.o
    0x10040304   0x10040304   0x00000002   Code   RO          191    .text.HardFault_IRQHandler  startup_bluenrg_lp.o
    0x10040306   0x10040306   0x00000002   Code   RO          205    .text.I2C1_IRQHandler  startup_bluenrg_lp.o
    0x10040308   0x10040308   0x00000002   Code   RO          207    .text.I2C2_IRQHandler  startup_bluenrg_lp.o
    0x1004030a   0x1004030a   0x00000002   PAD
    0x1004030c   0x1004030c   0x00000040   Code   RO          279    .text.LL_RCC_DIRECT_HSE_Enable  system_bluenrg_lp.o
    0x1004034c   0x1004034c   0x00000002   Code   RO          217    .text.LPUART1_IRQHandler  startup_bluenrg_lp.o
    0x1004034e   0x1004034e   0x00000002   Code   RO          243    .text.MR_BLE_IRQHandler  startup_bluenrg_lp.o
    0x10040350   0x10040350   0x00000042   Code   RO          707    .text.MessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x10040392   0x10040392   0x0000005e   Code   RO          701    .text.MessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x100403f0   0x100403f0   0x0000001e   Code   RO          699    .text.MessageQueueRemove  RTX_CM0.lib(rtx_msgqueue.o)
    0x1004040e   0x1004040e   0x00000002   PAD
    0x10040410   0x10040410   0x000001e0   Code   RO          273    .text.MrBleBiasTrimConfig  system_bluenrg_lp.o
    0x100405f0   0x100405f0   0x00000002   Code   RO          189    .text.NMI_IRQHandler  startup_bluenrg_lp.o
    0x100405f2   0x100405f2   0x00000002   Code   RO          225    .text.PKA_IRQHandler  startup_bluenrg_lp.o
    0x100405f4   0x100405f4   0x00000002   Code   RO          203    .text.PVD_IRQHandler  startup_bluenrg_lp.o
    0x100405f6   0x100405f6   0x00000002   Code   RO          195    .text.PendSV_IRQHandler  startup_bluenrg_lp.o
    0x100405f8   0x100405f8   0x00000002   Code   RO          241    .text.RADIO_CTRL_IRQHandler  startup_bluenrg_lp.o
    0x100405fa   0x100405fa   0x00000002   Code   RO          201    .text.RCC_IRQHandler  startup_bluenrg_lp.o
    0x100405fc   0x100405fc   0x0000004c   Code   RO          255    .text.RESET_HANDLER  startup_bluenrg_lp.o
    0x10040648   0x10040648   0x00000002   Code   RO          221    .text.RTC_IRQHandler  startup_bluenrg_lp.o
    0x1004064a   0x1004064a   0x00000002   Code   RO          209    .text.SPI1_IRQHandler  startup_bluenrg_lp.o
    0x1004064c   0x1004064c   0x00000002   Code   RO          211    .text.SPI2_IRQHandler  startup_bluenrg_lp.o
    0x1004064e   0x1004064e   0x00000002   Code   RO          213    .text.SPI3_IRQHandler  startup_bluenrg_lp.o
    0x10040650   0x10040650   0x00000002   Code   RO          193    .text.SVC_IRQHandler  startup_bluenrg_lp.o
    0x10040652   0x10040652   0x00000002   Code   RO          197    .text.SysTick_IRQHandler  startup_bluenrg_lp.o
    0x10040654   0x10040654   0x000001f4   Code   RO          277    .text.SystemClockConfig  system_bluenrg_lp.o
    0x10040848   0x10040848   0x0000035c   Code   RO          283    .text.SystemInit    system_bluenrg_lp.o
    0x10040ba4   0x10040ba4   0x00000002   Code   RO          219    .text.TIM1_IRQHandler  startup_bluenrg_lp.o
    0x10040ba6   0x10040ba6   0x00000002   PAD
    0x10040ba8   0x10040ba8   0x00000048   Code   RO          532    .text.TimerInsert   RTX_CM0.lib(rtx_timer.o)
    0x10040bf0   0x10040bf0   0x00000002   Code   RO          227    .text.UPCONV_IRQHandler  startup_bluenrg_lp.o
    0x10040bf2   0x10040bf2   0x00000002   Code   RO          215    .text.USART1_IRQHandler  startup_bluenrg_lp.o
    0x10040bf4   0x10040bf4   0x0000002c   Code   RO          149    .text._mutex_acquire  rtx_lib.o
    0x10040c20   0x10040c20   0x0000000a   Code   RO          153    .text._mutex_free   rtx_lib.o
    0x10040c2a   0x10040c2a   0x00000022   Code   RO          147    .text._mutex_initialize  rtx_lib.o
    0x10040c4c   0x10040c4c   0x0000002c   Code   RO          151    .text._mutex_release  rtx_lib.o
    0x10040c78   0x10040c78   0x00000008   Code   RO          143    .text._platform_post_stackheap_init  rtx_lib.o
    0x10040c80   0x10040c80   0x00000012   Code   RO            3    .text.main          main_1.o
    0x10040c92   0x10040c92   0x00000002   PAD
    0x10040c94   0x10040c94   0x00000028   Code   RO          498    .text.osDelay       RTX_CM0.lib(rtx_delay.o)
    0x10040cbc   0x10040cbc   0x00000030   Code   RO          306    .text.osKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x10040cec   0x10040cec   0x00000028   Code   RO          300    .text.osKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x10040d14   0x10040d14   0x00000074   Code   RO          675    .text.osMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x10040d88   0x10040d88   0x00000074   Code   RO          673    .text.osMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x10040dfc   0x10040dfc   0x00000028   Code   RO          564    .text.osMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x10040e24   0x10040e24   0x00000028   Code   RO          570    .text.osMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x10040e4c   0x10040e4c   0x00000024   Code   RO          560    .text.osMutexNew    RTX_CM0.lib(rtx_mutex.o)
    0x10040e70   0x10040e70   0x00000028   Code   RO          566    .text.osMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x10040e98   0x10040e98   0x00000002   Code   RO          180    .text.osRtxErrorNotify  rtx_config.o
    0x10040e9a   0x10040e9a   0x00000008   Code   RO          298    .text.osRtxKernelErrorNotify  RTX_CM0.lib(rtx_kernel.o)
    0x10040ea2   0x10040ea2   0x00000002   Code   RO          296    .text.osRtxKernelPreInit  RTX_CM0.lib(rtx_kernel.o)
    0x10040ea4   0x10040ea4   0x00000078   Code   RO          601    .text.osRtxMemoryAlloc  RTX_CM0.lib(rtx_memory.o)
    0x10040f1c   0x10040f1c   0x0000004e   Code   RO          603    .text.osRtxMemoryFree  RTX_CM0.lib(rtx_memory.o)
    0x10040f6a   0x10040f6a   0x0000002e   Code   RO          599    .text.osRtxMemoryInit  RTX_CM0.lib(rtx_memory.o)
    0x10040f98   0x10040f98   0x0000002a   Code   RO          615    .text.osRtxMemoryPoolAlloc  RTX_CM0.lib(rtx_mempool.o)
    0x10040fc2   0x10040fc2   0x00000036   Code   RO          617    .text.osRtxMemoryPoolFree  RTX_CM0.lib(rtx_mempool.o)
    0x10040ff8   0x10040ff8   0x0000003c   Code   RO          613    .text.osRtxMemoryPoolInit  RTX_CM0.lib(rtx_mempool.o)
    0x10041034   0x10041034   0x000000bc   Code   RO          697    .text.osRtxMessageQueuePostProcess  RTX_CM0.lib(rtx_msgqueue.o)
    0x100410f0   0x100410f0   0x00000024   Code   RO          665    .text.osRtxMessageQueueTimerSetup  RTX_CM0.lib(rtx_msgqueue.o)
    0x10041114   0x10041114   0x0000006c   Code   RO          727    .text.osRtxPostProcess  RTX_CM0.lib(rtx_system.o)
    0x10041180   0x10041180   0x00000034   Code   RO          382    .text.osRtxThreadBlock  RTX_CM0.lib(rtx_thread.o)
    0x100411b4   0x100411b4   0x0000008c   Code   RO          390    .text.osRtxThreadDelayInsert  RTX_CM0.lib(rtx_thread.o)
    0x10041240   0x10041240   0x00000044   Code   RO          386    .text.osRtxThreadDelayRemove  RTX_CM0.lib(rtx_thread.o)
    0x10041284   0x10041284   0x0000004c   Code   RO          380    .text.osRtxThreadDispatch  RTX_CM0.lib(rtx_thread.o)
    0x100412d0   0x100412d0   0x00000014   Code   RO          366    .text.osRtxThreadListGet  RTX_CM0.lib(rtx_thread.o)
    0x100412e4   0x100412e4   0x0000002c   Code   RO          364    .text.osRtxThreadListPut  RTX_CM0.lib(rtx_thread.o)
    0x10041310   0x10041310   0x00000018   Code   RO          370    .text.osRtxThreadListRemove  RTX_CM0.lib(rtx_thread.o)
    0x10041328   0x10041328   0x00000024   Code   RO          368    .text.osRtxThreadListSort  RTX_CM0.lib(rtx_thread.o)
    0x1004134c   0x1004134c   0x00000014   Code   RO          372    .text.osRtxThreadReadyPut  RTX_CM0.lib(rtx_thread.o)
    0x10041360   0x10041360   0x00000006   Code   RO          376    .text.osRtxThreadRegPtr  RTX_CM0.lib(rtx_thread.o)
    0x10041366   0x10041366   0x00000002   PAD
    0x10041368   0x10041368   0x0000003c   Code   RO          388    .text.osRtxThreadWaitEnter  RTX_CM0.lib(rtx_thread.o)
    0x100413a4   0x100413a4   0x00000022   Code   RO          384    .text.osRtxThreadWaitExit  RTX_CM0.lib(rtx_thread.o)
    0x100413c6   0x100413c6   0x00000002   PAD
    0x100413c8   0x100413c8   0x00000020   Code   RO          514    .text.osRtxTimerSetup  RTX_CM0.lib(rtx_timer.o)
    0x100413e8   0x100413e8   0x0000001c   Code   RO          518    .text.osRtxTimerThread  RTX_CM0.lib(rtx_timer.o)
    0x10041404   0x10041404   0x00000074   Code   RO          516    .text.osRtxTimerTick  RTX_CM0.lib(rtx_timer.o)
    0x10041478   0x10041478   0x0000012c   Code   RO          257    .text.setInterruptPriority  startup_bluenrg_lp.o
    0x100415a4   0x100415a4   0x00000018   Code   RO          502    .text.svcRtxDelay   RTX_CM0.lib(rtx_delay.o)
    0x100415bc   0x100415bc   0x0000000c   Code   RO          308    .text.svcRtxKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x100415c8   0x100415c8   0x00000140   Code   RO          338    .text.svcRtxKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x10041708   0x10041708   0x000000cc   Code   RO          709    .text.svcRtxMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x100417d4   0x100417d4   0x000001c4   Code   RO          667    .text.svcRtxMessageQueueNew  RTX_CM0.lib(rtx_msgqueue.o)
    0x10041998   0x10041998   0x000000ac   Code   RO          705    .text.svcRtxMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x10041a44   0x10041a44   0x00000094   Code   RO          576    .text.svcRtxMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x10041ad8   0x10041ad8   0x000000b4   Code   RO          582    .text.svcRtxMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x10041b8c   0x10041b8c   0x00000070   Code   RO          572    .text.svcRtxMutexNew  RTX_CM0.lib(rtx_mutex.o)
    0x10041bfc   0x10041bfc   0x000000bc   Code   RO          578    .text.svcRtxMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x10041cb8   0x10041cb8   0x000001f6   Code   RO          776    .text_divfast       c_p.l(aeabi_sdivfast.o)
    0x10041eae   0x10041eae   0x00000002   PAD
    0x10041eb0   0x10041eb0   0x00000070   Data   RO          159    .rodata             rtx_lib.o
    0x10041f20   0x10041f20   0x00000038   Data   RO          162    .rodata             rtx_lib.o
    0x10041f58   0x10041f58   0x00000024   Data   RO          156    .rodata.os_idle_thread_attr  rtx_lib.o
    0x10041f7c   0x10041f7c   0x00000018   Data   RO          158    .rodata.os_timer_mq_attr  rtx_lib.o
    0x10041f94   0x10041f94   0x00000024   Data   RO          157    .rodata.os_timer_thread_attr  rtx_lib.o
    0x10041fb8   0x10041fb8   0x0000000b   Data   RO          354    .rodata.str1.4      RTX_CM0.lib(rtx_kernel.o)
    0x10041fc3   0x10041fc3   0x00000001   PAD
    0x10041fc4   0x10041fc4   0x00000030   Data   RO          966    Region$$Table       anon$$obj.o


    Execution Region REGION_FLASH_NVM (Exec base: 0x1007f000, Load base: 0x10041ff4, Size: 0x00000000, Max: 0x00001000, ABSOLUTE, UNINIT)

    **** No section assigned to this execution region ****


    Execution Region ram_vr_block (Exec base: 0x20000004, Load base: 0x10041ff4, Size: 0x0000002c, Max: 0x0000002c, ABSOLUTE, UNINIT)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000004        -       0x0000002c   Zero   RW          287    .bss.ram_vr         system_bluenrg_lp.o


    Execution Region crash_info_ram_vr_block (Exec base: 0x20000034, Load base: 0x10041ff4, Size: 0x00000000, Max: 0x00000028, ABSOLUTE, UNINIT)

    **** No section assigned to this execution region ****


    Execution Region BLUE (Exec base: 0x200000c0, Load base: 0x10041ff4, Size: 0x0000029c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200000c0        -       0x0000029c   Zero   RW          286    .bss.__blue_RAM     system_bluenrg_lp.o


    Execution Region REGION_RAM1 (Exec base: 0x20000360, Load base: 0x10041ff8, Size: 0x000085fc, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000360   0x10041ff8   0x00000004   Data   RW          285    .data.SystemCoreClock  system_bluenrg_lp.o
    0x20000364   0x10041ffc   0x000000a4   Data   RW          355    .data.os            RTX_CM0.lib(rtx_kernel.o)
    0x20000408        -       0x00008040   Zero   RW          155    .bss.os             rtx_lib.o
    0x20008448        -       0x00000034   Zero   RW          167    .bss.os.msgqueue.cb  rtx_lib.o
    0x2000847c        -       0x00000050   Zero   RW          168    .bss.os.msgqueue.mem  rtx_lib.o
    0x200084cc        -       0x00000088   Zero   RW          164    .bss.os.thread.cb   rtx_lib.o
    0x20008554   0x100420a0   0x00000004   PAD
    0x20008558        -       0x00000200   Zero   RW          165    .bss.os.thread.idle.stack  rtx_lib.o
    0x20008758        -       0x00000200   Zero   RW          166    .bss.os.thread.timer.stack  rtx_lib.o
    0x20008958        -       0x00000001   Zero   RW          169    .bss.os_kernel_is_active.os_kernel_active  rtx_lib.o


    Execution Region REGION_RAM2 (Exec base: 0x2000895c, Load base: 0x100420a0, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE, UNINIT)

    **** No section assigned to this execution region ****


    Execution Region ARM_LIB_STACK (Exec base: 0x2000f400, Load base: 0x100420a0, Size: 0x00000c00, Max: 0x00000c00, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2000f400        -       0x00000c00   Zero   RW            1    ARM_LIB_STACK.bss   anon$$obj.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         0          0          0          0          0         32   blue_unit_conversion.o
       104         10          0          0          0        404   context_switch.o
        18          0          0          0          0        627   main_1.o
         2          0          0          0          0        682   rtx_config.o
       140          4        264          0      34125       7567   rtx_lib.o
       438         36        192          0          0       7640   startup_bluenrg_lp.o
      1904        192          0          4        712      16276   system_bluenrg_lp.o

    ----------------------------------------------------------------------
      2612        242        504          4      37916      33228   Object Totals
         0          0         48          0       3072          0   (incl. Generated)
         6          0          0          0          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        64          4          0          0          0       2729   rtx_delay.o
       430         28         11        164          0      15793   rtx_kernel.o
       244          0          0          0          0       2665   rtx_memory.o
       156          0          0          0          0      14433   rtx_mempool.o
      1474         40          0          0          0      18183   rtx_msgqueue.o
       784         28          0          0          0       9527   rtx_mutex.o
       108          4          0          0          0       4871   rtx_system.o
       580          0          0          0          0      31596   rtx_thread.o
       248          8          0          0          0       9965   rtx_timer.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         8          4          0          0          0          0   __rtentry7.o
        60          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
       502          0          0          0          0         92   aeabi_sdivfast.o
        16          0          0          0          0         68   exit.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
        64          0          0          0          0        108   rt_memclr.o
       186          0          0          0          0        144   rt_memcpy.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         60   sys_exit.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
      5052        128         12        164          0     110370   Library Totals
        12          0          1          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      4088        112         11        164          0     109762   RTX_CM0.lib
       952         16          0          0          0        608   c_p.l

    ----------------------------------------------------------------------
      5052        128         12        164          0     110370   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      7664        370        516        168      37916     143202   Grand Totals
      7664        370        516        168      37916     143202   ELF Image Totals
      7664        370        516        168          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 8180 (   7.99kB)
    Total RW  Size (RW Data + ZI Data)             38084 (  37.19kB)
    Total ROM Size (Code + RO Data + RW Data)       8348 (   8.15kB)

==============================================================================

